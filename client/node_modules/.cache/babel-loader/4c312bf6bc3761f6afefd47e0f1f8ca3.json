{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\david\\\\react\\\\RateCourses\\\\client\\\\src\\\\Components\\\\Scale.js\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Slider from \"@material-ui/core/Slider\";\n\nconst DiscreteSlider = props => {\n  const useStyles = makeStyles(theme => ({\n    root: {\n      width: 300\n    },\n    margin: {\n      height: theme.spacing(2)\n    }\n  }));\n  var diff = 1;\n\n  componentWillReceiveProps = nextProps => {\n    if (nextProps.dval != null & nextProps.dval != this.diff) {\n      this.diff = nextProps.dval;\n    }\n  };\n\n  function toNumberString(num) {\n    console.log(num);\n\n    if (Number.isInteger(num)) {\n      return num + \".0\";\n    } else {\n      return num.toString();\n    }\n  }\n\n  const marks = [{\n    value: 1,\n    label: \"Hard\"\n  }, {\n    value: 2,\n    label: \"\"\n  }, {\n    value: 3,\n    label: \"Average\"\n  }, {\n    value: 4,\n    label: \"\"\n  }, {\n    value: 5,\n    label: \"Total Bird\"\n  }];\n\n  function valuetext(value) {\n    return `${value}`;\n  }\n\n  const classes = useStyles();\n\n  const handleSliderChange = (event, newValue) => {\n    // Here, what we want to do, call a deeply nested call back function, which then notifies all the components of the new time\n    props.Difficulty(newValue);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Slider, {\n    defaultValue: this.diff,\n    getAriaValueText: valuetext,\n    \"aria-labelledby\": \"discrete-slider-custom\",\n    step: 0.5,\n    max: 5,\n    min: 1,\n    onChange: handleSliderChange,\n    valueLabelDisplay: \"auto\",\n    marks: marks,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default DiscreteSlider;","map":{"version":3,"sources":["C:/Users/david/react/RateCourses/client/src/Components/Scale.js"],"names":["React","makeStyles","Typography","Slider","DiscreteSlider","props","useStyles","theme","root","width","margin","height","spacing","diff","componentWillReceiveProps","nextProps","dval","toNumberString","num","console","log","Number","isInteger","toString","marks","value","label","valuetext","classes","handleSliderChange","event","newValue","Difficulty"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;AAKA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAC9B,QAAMC,SAAS,GAAGL,UAAU,CAACM,KAAK,KAAK;AACnCC,IAAAA,IAAI,EAAE;AACJC,MAAAA,KAAK,EAAE;AADH,KAD6B;AAInCC,IAAAA,MAAM,EAAE;AACNC,MAAAA,MAAM,EAAEJ,KAAK,CAACK,OAAN,CAAc,CAAd;AADF;AAJ2B,GAAL,CAAN,CAA5B;AASE,MAAIC,IAAI,GAAG,CAAX;;AAGAC,EAAAA,yBAAyB,GAAIC,SAAD,IAAa;AAEvC,QAAGA,SAAS,CAACC,IAAV,IAAgB,IAAhB,GAAuBD,SAAS,CAACC,IAAV,IAAgB,KAAKH,IAA/C,EAAoD;AAElD,WAAKA,IAAL,GAAaE,SAAS,CAACC,IAAvB;AAED;AAEF,GARD;;AAWA,WAASC,cAAT,CAAwBC,GAAxB,EAA6B;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;;AACA,QAAIG,MAAM,CAACC,SAAP,CAAiBJ,GAAjB,CAAJ,EAA2B;AACzB,aAAOA,GAAG,GAAG,IAAb;AACD,KAFD,MAEO;AACL,aAAOA,GAAG,CAACK,QAAJ,EAAP;AACD;AACF;;AAMD,QAAMC,KAAK,GAAG,CACZ;AACEC,IAAAA,KAAK,EAAE,CADT;AAEEC,IAAAA,KAAK,EAAE;AAFT,GADY,EAKZ;AACED,IAAAA,KAAK,EAAE,CADT;AAEEC,IAAAA,KAAK,EAAE;AAFT,GALY,EASZ;AACED,IAAAA,KAAK,EAAE,CADT;AAEEC,IAAAA,KAAK,EAAE;AAFT,GATY,EAaZ;AACED,IAAAA,KAAK,EAAE,CADT;AAEEC,IAAAA,KAAK,EAAE;AAFT,GAbY,EAiBZ;AACED,IAAAA,KAAK,EAAE,CADT;AAEEC,IAAAA,KAAK,EAAE;AAFT,GAjBY,CAAd;;AA0BF,WAASC,SAAT,CAAmBF,KAAnB,EAA0B;AACtB,WAAQ,GAAEA,KAAM,EAAhB;AACD;;AAEH,QAAMG,OAAO,GAAGtB,SAAS,EAAzB;;AACA,QAAMuB,kBAAkB,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAoB;AAC/C;AACA1B,IAAAA,KAAK,CAAC2B,UAAN,CAAiBD,QAAjB;AACD,GAHC;;AAKF,sBACE;AAAK,IAAA,SAAS,EAAEH,OAAO,CAACpB,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,YAAY,EAAE,KAAKK,IADrB;AAEE,IAAA,gBAAgB,EAAEc,SAFpB;AAGE,uBAAgB,wBAHlB;AAIE,IAAA,IAAI,EAAE,GAJR;AAKE,IAAA,GAAG,EAAE,CALP;AAME,IAAA,GAAG,EAAE,CANP;AAOE,IAAA,QAAQ,EAAEE,kBAPZ;AAQE,IAAA,iBAAiB,EAAC,MARpB;AASE,IAAA,KAAK,EAAEL,KATT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAeD,CAxFD;;AA2FA,eAAepB,cAAf","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\n\r\n\r\n\r\n\r\nconst DiscreteSlider = (props) => {\r\n    const useStyles = makeStyles(theme => ({\r\n        root: {\r\n          width: 300\r\n        },\r\n        margin: {\r\n          height: theme.spacing(2)\r\n        }\r\n      }));\r\n\r\n      var diff = 1; \r\n\r\n\r\n      componentWillReceiveProps = (nextProps)=>{\r\n\r\n        if(nextProps.dval!=null & nextProps.dval!=this.diff){\r\n\r\n          this.diff =  nextProps.dval; \r\n\r\n        }\r\n    \r\n      }\r\n\r\n\r\n      function toNumberString(num) { \r\n        console.log(num)\r\n        if (Number.isInteger(num)) { \r\n          return num + \".0\"\r\n        } else {\r\n          return num.toString(); \r\n        }\r\n      }\r\n      \r\n      \r\n      \r\n      \r\n      \r\n      const marks = [\r\n        {\r\n          value: 1,\r\n          label: \"Hard\"\r\n        },\r\n        {\r\n          value: 2,\r\n          label: \"\"\r\n        },\r\n        {\r\n          value: 3,\r\n          label: \"Average\"\r\n        },\r\n        {\r\n          value: 4,\r\n          label: \"\"\r\n        },\r\n        {\r\n          value: 5,\r\n          label: \"Total Bird\"\r\n        }\r\n      ];\r\n      \r\n\r\n\r\n\r\n    function valuetext(value) {\r\n        return `${value}`;\r\n      }\r\n    \r\n    const classes = useStyles();\r\n    const handleSliderChange = (event, newValue)=> {\r\n    // Here, what we want to do, call a deeply nested call back function, which then notifies all the components of the new time\r\n    props.Difficulty(newValue); \r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Slider\r\n        defaultValue={this.diff}\r\n        getAriaValueText={valuetext}\r\n        aria-labelledby=\"discrete-slider-custom\"\r\n        step={0.5}\r\n        max={5}\r\n        min={1}\r\n        onChange={handleSliderChange}\r\n        valueLabelDisplay=\"auto\"\r\n        marks={marks}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default DiscreteSlider;"]},"metadata":{},"sourceType":"module"}