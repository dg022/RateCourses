{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\david\\\\react\\\\RateCourses\\\\client\\\\src\\\\Components\\\\Edit.js\";\nimport React, { Component } from 'react';\nimport { Button, Modal, TextArea, Form } from 'semantic-ui-react';\nimport Input from \"./Input\";\nimport \"./Edit.css\";\nimport axios from \"axios\";\nimport Forms from \"./Form\";\n\nvar validator = require(\"email-validator\");\n\nvar swearjar = require('swearjar-extended');\n\nclass ModalExampleCloseConfig extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      queried: false,\n      open: false,\n      message: false,\n      code: \"\",\n      tbval: this.props.data.isTextBook,\n      eval: this.props.data.email,\n      dval: this.props.data.difficulty,\n      taval: this.props.takeAgain,\n      aval: this.props.data.body,\n      uval: this.props.data.useful,\n      up: this.props.data.thumbsUp,\n      down: this.props.data.thumbsDown,\n      id: this.props.id,\n      error: 0,\n      sent: false,\n      Profanity: false\n    };\n\n    this.email = e => {\n      this.setState({\n        eval: e\n      });\n    };\n\n    this.TextBook = term => {\n      this.setState({\n        tbval: term\n      });\n    };\n\n    this.useful = term => {\n      this.setState({\n        uval: term\n      });\n    };\n\n    this.Difficulty = term => {\n      this.setState({\n        dval: term\n      });\n    };\n\n    this.TakeAgain = term => {\n      this.setState({\n        taval: term\n      });\n    };\n\n    this.About = term => {\n      this.setState({\n        aval: term\n      });\n    };\n\n    this.codeChange = codeType => {\n      this.setState({\n        code: codeType\n      });\n    };\n\n    this.closeConfigShow = (closeOnEscape, closeOnDimmerClick) => () => {\n      this.setState({\n        closeOnEscape,\n        closeOnDimmerClick,\n        open: true\n      });\n    };\n\n    this.ResetProfanity = () => {\n      this.setState({\n        Profanity: false\n      });\n    };\n\n    this.send = async () => {\n      var profanity = swearjar.profane(this.state.aval);\n      this.setState({\n        Profanity: profanity\n      });\n\n      if (this.state.aval.length > 600) {\n        this.setState({\n          error: 1\n        });\n      }\n\n      if (this.state.aval.length <= 600) {\n        this.setState({\n          error: 0\n        });\n      }\n\n      console.log(this.state.Profanity);\n      console.log(profanity);\n      this.setState({\n        Profanity: profanity,\n        error: this.state.aval.length > 600 ? 1 : 0\n      }, () => {\n        if (!this.state.Profanity && this.state.error == 0) {\n          const list = {\n            \"body\": this.state.aval,\n            \"email\": this.state.eval,\n            \"difficulty\": this.state.dval,\n            \"takeAgain\": this.state.taval,\n            \"isTextBook\": this.state.tbval,\n            \"thumbsUp\": this.state.up,\n            \"thumbsDown\": this.state.down,\n            \"id\": this.state.id,\n            \"useful\": this.state.uval\n          };\n          this.sendEdit(list);\n          console.log(\"this happened\");\n          this.props.updateState(list);\n          this.close();\n        }\n      });\n    };\n\n    this.sendEdit = async list => {\n      let res = await axios.get('/edit', {\n        params: {\n          courseTitle: this.props.Title,\n          review: list,\n          id: this.state.id\n        }\n      });\n    };\n\n    this.sendFeedback = (templateId, variables) => {\n      window.emailjs.send('gmail', templateId, variables).then(res => {\n        console.log('Email successfully sent!');\n      }) // Handle errors here however you like, or use a React error boundary\n      .catch(err => console.error('Oh well, you failed. Here some thoughts on the error that occured:', err));\n    };\n\n    this.SendEmail = async () => {\n      let res = await axios.get('/findid', {\n        params: {\n          courseTitle: this.props.Title,\n          id: this.state.id\n        }\n      });\n      console.log(\"email would have sent\"); //const templateId = 'template_swHMraBb';\n      //this.sendFeedback(templateId, {message_html: this.state.id, from_name: \"David\", reply_to: res.data})\n\n      this.setState({\n        sent: true\n      }); // Here you need to send some kind of message, so that it says \"email sent sucessfully\"\n    };\n\n    this.close = () => this.setState({\n      open: false,\n      message: false,\n      error: 0,\n      sent: false\n    });\n\n    this.Submitclose = async () => {\n      if (this.state.code == this.props.id) {\n        this.setState({\n          message: true\n        });\n      } else {\n        // Here you need to add logic to make it display some kind of error\n        //\n        this.setState({\n          error: 1\n        });\n      }\n    };\n\n    this.renderButton = () => {\n      if (this.state.sent) {\n        return;\n      }\n\n      if (this.state.message) {\n        return /*#__PURE__*/React.createElement(Modal.Actions, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          onClick: this.send,\n          positive: true,\n          labelPosition: \"right\",\n          icon: \"checkmark\",\n          content: \"Submit\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 7\n          }\n        }));\n      }\n\n      if (!this.state.message) {\n        return /*#__PURE__*/React.createElement(Modal.Actions, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"center\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          id: \"SWAG\",\n          onClick: this.Submitclose,\n          positive: true,\n          labelPosition: \"right\",\n          icon: \"checkmark\",\n          content: \"Submit\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 9\n          }\n        }), /*#__PURE__*/React.createElement(Button, {\n          onClick: this.SendEmail,\n          id: \"SWAG\",\n          yellow: true,\n          labelPosition: \"right\",\n          icon: \"question circle outline\",\n          content: \"Forgot Code?\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 5\n          }\n        })));\n      }\n    };\n\n    this.renderModal = () => {\n      if (this.state.sent) {\n        return /*#__PURE__*/React.createElement(Modal.Content, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 9\n          }\n        }, \"Your edit code has been sent to your email!\");\n      }\n\n      if (this.state.message) {\n        return /*#__PURE__*/React.createElement(Modal.Content, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Forms, {\n          tbval: this.props.data.isTextBook,\n          dval: this.props.data.difficulty,\n          taval: this.props.data.takeAgain,\n          eval: this.props.data.email,\n          aval: this.props.data.body,\n          uval: this.props.data.useful,\n          email: this.email,\n          useful: this.useful,\n          TextBook: this.TextBook,\n          Difficulty: this.Difficulty,\n          TakeAgain: this.TakeAgain,\n          About: this.About,\n          Profanity: this.state.Profanity,\n          Error: this.state.error,\n          ResetProfanity: this.ResetProfanity,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 17\n          }\n        }));\n      }\n\n      if (this.state.open) {\n        return /*#__PURE__*/React.createElement(Modal.Content, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(Form, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"center\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(Input, {\n          error: this.state.error,\n          codeChange: this.codeChange,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 9\n          }\n        }))));\n      }\n    };\n  }\n\n  render() {\n    const {\n      open,\n      closeOnEscape,\n      closeOnDimmerClick\n    } = this.state;\n\n    if (this.props.on == true) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        onClick: this.closeConfigShow(false, true),\n        class: \"pencil alternate icon large\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Modal, {\n        className: \"edit\",\n        open: open,\n        closeOnEscape: closeOnEscape,\n        closeOnDimmerClick: closeOnDimmerClick,\n        onClose: this.close,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 21\n        }\n      }, \"  \", /*#__PURE__*/React.createElement(\"center\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 37\n        }\n      }, \" Edit Post: Provide Edit Code! \"), \" \"), this.renderModal(), this.renderButton()));\n    }\n\n    return /*#__PURE__*/React.createElement(\"i\", {\n      class: \" large pen square  icon large \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n\nexport default ModalExampleCloseConfig;","map":{"version":3,"sources":["C:/Users/david/react/RateCourses/client/src/Components/Edit.js"],"names":["React","Component","Button","Modal","TextArea","Form","Input","axios","Forms","validator","require","swearjar","ModalExampleCloseConfig","state","queried","open","message","code","tbval","props","data","isTextBook","eval","email","dval","difficulty","taval","takeAgain","aval","body","uval","useful","up","thumbsUp","down","thumbsDown","id","error","sent","Profanity","e","setState","TextBook","term","Difficulty","TakeAgain","About","codeChange","codeType","closeConfigShow","closeOnEscape","closeOnDimmerClick","ResetProfanity","send","profanity","profane","length","console","log","list","sendEdit","updateState","close","res","get","params","courseTitle","Title","review","sendFeedback","templateId","variables","window","emailjs","then","catch","err","SendEmail","Submitclose","renderButton","renderModal","render","on"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,QAAxB,EAAkCC,IAAlC,QAA8C,mBAA9C;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,YAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,QAAlB;;AACA,IAAIC,SAAS,GAAGC,OAAO,CAAC,iBAAD,CAAvB;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,mBAAD,CAAtB;;AAEA,MAAME,uBAAN,SAAsCX,SAAtC,CAAgD;AAAA;AAAA;AAAA,SAC9CY,KAD8C,GACtC;AACJC,MAAAA,OAAO,EAAC,KADJ;AAEJC,MAAAA,IAAI,EAAE,KAFF;AAGJC,MAAAA,OAAO,EAAC,KAHJ;AAIJC,MAAAA,IAAI,EAAC,EAJD;AAKJC,MAAAA,KAAK,EAAC,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,UALlB;AAMJC,MAAAA,IAAI,EAAC,KAAKH,KAAL,CAAWC,IAAX,CAAgBG,KANjB;AAOJC,MAAAA,IAAI,EAAC,KAAKL,KAAL,CAAWC,IAAX,CAAgBK,UAPjB;AAQJC,MAAAA,KAAK,EAAC,KAAKP,KAAL,CAAWQ,SARb;AASJC,MAAAA,IAAI,EAAC,KAAKT,KAAL,CAAWC,IAAX,CAAgBS,IATjB;AAUJC,MAAAA,IAAI,EAAC,KAAKX,KAAL,CAAWC,IAAX,CAAgBW,MAVjB;AAWJC,MAAAA,EAAE,EAAC,KAAKb,KAAL,CAAWC,IAAX,CAAgBa,QAXf;AAYJC,MAAAA,IAAI,EAAC,KAAKf,KAAL,CAAWC,IAAX,CAAgBe,UAZjB;AAaJC,MAAAA,EAAE,EAAC,KAAKjB,KAAL,CAAWiB,EAbV;AAcJC,MAAAA,KAAK,EAAC,CAdF;AAeJC,MAAAA,IAAI,EAAC,KAfD;AAgBJC,MAAAA,SAAS,EAAC;AAhBN,KADsC;;AAAA,SA4BhDhB,KA5BgD,GA4BvCiB,CAAD,IAAM;AAEZ,WAAKC,QAAL,CAAc;AAACnB,QAAAA,IAAI,EAACkB;AAAN,OAAd;AAED,KAhC+C;;AAAA,SAkChDE,QAlCgD,GAkCpCC,IAAD,IAAS;AAEhB,WAAKF,QAAL,CAAc;AAACvB,QAAAA,KAAK,EAACyB;AAAP,OAAd;AACH,KArC+C;;AAAA,SAwChDZ,MAxCgD,GAwCtCY,IAAD,IAAS;AAEhB,WAAKF,QAAL,CAAc;AAACX,QAAAA,IAAI,EAACa;AAAN,OAAd;AACD,KA3C+C;;AAAA,SA6ChDC,UA7CgD,GA6CnCD,IAAD,IAAS;AAEjB,WAAKF,QAAL,CAAc;AAACjB,QAAAA,IAAI,EAACmB;AAAN,OAAd;AACH,KAhD+C;;AAAA,SAkDhDE,SAlDgD,GAkDpCF,IAAD,IAAS;AAEhB,WAAKF,QAAL,CAAc;AAACf,QAAAA,KAAK,EAACiB;AAAP,OAAd;AACH,KArD+C;;AAAA,SAuDhDG,KAvDgD,GAuDxCH,IAAD,IAAS;AAEZ,WAAKF,QAAL,CAAc;AAACb,QAAAA,IAAI,EAACe;AAAN,OAAd;AACH,KA1D+C;;AAAA,SA6D9CI,UA7D8C,GA6D/BC,QAAD,IAAa;AAEzB,WAAKP,QAAL,CAAc;AAACxB,QAAAA,IAAI,EAAC+B;AAAN,OAAd;AAED,KAjE6C;;AAAA,SAmE9CC,eAnE8C,GAmE5B,CAACC,aAAD,EAAgBC,kBAAhB,KAAuC,MAAM;AAC7D,WAAKV,QAAL,CAAc;AAAES,QAAAA,aAAF;AAAiBC,QAAAA,kBAAjB;AAAqCpC,QAAAA,IAAI,EAAE;AAA3C,OAAd;AACD,KArE6C;;AAAA,SAuE9CqC,cAvE8C,GAuE7B,MAAK;AAEpB,WAAKX,QAAL,CAAc;AAACF,QAAAA,SAAS,EAAC;AAAX,OAAd;AAED,KA3E6C;;AAAA,SA8E9Cc,IA9E8C,GA8EvC,YAAW;AAIhB,UAAIC,SAAS,GAAI3C,QAAQ,CAAC4C,OAAT,CAAiB,KAAK1C,KAAL,CAAWe,IAA5B,CAAjB;AACA,WAAKa,QAAL,CAAc;AAACF,QAAAA,SAAS,EAACe;AAAX,OAAd;;AAEA,UAAG,KAAKzC,KAAL,CAAWe,IAAX,CAAgB4B,MAAhB,GAAyB,GAA5B,EAAgC;AAC9B,aAAKf,QAAL,CAAc;AAACJ,UAAAA,KAAK,EAAC;AAAP,SAAd;AACD;;AAED,UAAG,KAAKxB,KAAL,CAAWe,IAAX,CAAgB4B,MAAhB,IAAyB,GAA5B,EAAiC;AAC/B,aAAKf,QAAL,CAAc;AAACJ,UAAAA,KAAK,EAAC;AAAP,SAAd;AACD;;AAGDoB,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAK7C,KAAL,CAAW0B,SAAvB;AACAkB,MAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAZ;AAGA,WAAKb,QAAL,CAAc;AACZF,QAAAA,SAAS,EAACe,SADE;AAEZjB,QAAAA,KAAK,EAAE,KAAKxB,KAAL,CAAWe,IAAX,CAAgB4B,MAAhB,GAAyB,GAAzB,GAA6B,CAA7B,GAA+B;AAF1B,OAAd,EAGC,MAAM;AACP,YAAG,CAAC,KAAK3C,KAAL,CAAW0B,SAAZ,IAAyB,KAAK1B,KAAL,CAAWwB,KAAX,IAAkB,CAA9C,EAAgD;AAC9C,gBAAMsB,IAAI,GAAG;AACX,oBAAQ,KAAK9C,KAAL,CAAWe,IADR;AAEX,qBAAQ,KAAKf,KAAL,CAAWS,IAFR;AAGX,0BAAa,KAAKT,KAAL,CAAWW,IAHb;AAIX,yBAAY,KAAKX,KAAL,CAAWa,KAJZ;AAKX,0BAAa,KAAKb,KAAL,CAAWK,KALb;AAMX,wBAAW,KAAKL,KAAL,CAAWmB,EANX;AAOX,0BAAa,KAAKnB,KAAL,CAAWqB,IAPb;AAQX,kBAAK,KAAKrB,KAAL,CAAWuB,EARL;AASX,sBAAS,KAAKvB,KAAL,CAAWiB;AATT,WAAb;AAcA,eAAK8B,QAAL,CAAcD,IAAd;AACAF,UAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,eAAKvC,KAAL,CAAW0C,WAAX,CAAuBF,IAAvB;AAGD,eAAKG,KAAL;AACA;AAGF,OA5BC;AAmCD,KArI6C;;AAAA,SAwI9CF,QAxI8C,GAwIlC,MAAOD,IAAP,IAAgB;AAG1B,UAAII,GAAG,GAAG,MAAMxD,KAAK,CAACyD,GAAN,CAAU,OAAV,EAAmB;AACjCC,QAAAA,MAAM,EAAE;AACNC,UAAAA,WAAW,EAAE,KAAK/C,KAAL,CAAWgD,KADlB;AAENC,UAAAA,MAAM,EAACT,IAFD;AAGNvB,UAAAA,EAAE,EAAC,KAAKvB,KAAL,CAAWuB;AAHR;AADyB,OAAnB,CAAhB;AAaD,KAxJ6C;;AAAA,SA6KhDiC,YA7KgD,GA6KhC,CAACC,UAAD,EAAaC,SAAb,KAA2B;AACzCC,MAAAA,MAAM,CAACC,OAAP,CAAepB,IAAf,CACE,OADF,EACWiB,UADX,EAEEC,SAFF,EAGIG,IAHJ,CAGSX,GAAG,IAAI;AACZN,QAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACD,OALH,EAME;AANF,OAOGiB,KAPH,CAOSC,GAAG,IAAInB,OAAO,CAACpB,KAAR,CAAc,oEAAd,EAAoFuC,GAApF,CAPhB;AAQC,KAtL6C;;AAAA,SAwL9CC,SAxL8C,GAwLlC,YAAY;AAItB,UAAId,GAAG,GAAG,MAAMxD,KAAK,CAACyD,GAAN,CAAU,SAAV,EAAqB;AACnCC,QAAAA,MAAM,EAAE;AACNC,UAAAA,WAAW,EAAE,KAAK/C,KAAL,CAAWgD,KADlB;AAEN/B,UAAAA,EAAE,EAAC,KAAKvB,KAAL,CAAWuB;AAFR;AAD2B,OAArB,CAAhB;AAMAqB,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAVsB,CAWtB;AACA;;AAEA,WAAKjB,QAAL,CAAc;AAACH,QAAAA,IAAI,EAAC;AAAN,OAAd,EAdsB,CAetB;AAID,KA3M6C;;AAAA,SA8M9CwB,KA9M8C,GA8MtC,MAAM,KAAKrB,QAAL,CAAc;AAAE1B,MAAAA,IAAI,EAAE,KAAR;AAAeC,MAAAA,OAAO,EAAC,KAAvB;AAA8BqB,MAAAA,KAAK,EAAC,CAApC;AAAuCC,MAAAA,IAAI,EAAC;AAA5C,KAAd,CA9MgC;;AAAA,SA+M9CwC,WA/M8C,GA+MhC,YAAY;AAG1B,UAAG,KAAKjE,KAAL,CAAWI,IAAX,IAAmB,KAAKE,KAAL,CAAWiB,EAAjC,EAAoC;AACpC,aAAKK,QAAL,CAAc;AAAEzB,UAAAA,OAAO,EAAC;AAAV,SAAd;AACC,OAFD,MAEK;AAEH;AACA;AACA,aAAKyB,QAAL,CAAc;AAACJ,UAAAA,KAAK,EAAC;AAAP,SAAd;AAGD;AAIA,KA/N6C;;AAAA,SAiO9C0C,YAjO8C,GAiOjC,MAAI;AACf,UAAG,KAAKlE,KAAL,CAAWyB,IAAd,EAAmB;AACjB;AACD;;AAGD,UAAG,KAAKzB,KAAL,CAAWG,OAAd,EAAsB;AAElB,4BACI,oBAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAEN,oBAAC,MAAD;AACE,UAAA,OAAO,EAAE,KAAKqC,IADhB;AAEE,UAAA,QAAQ,MAFV;AAGE,UAAA,aAAa,EAAC,OAHhB;AAIE,UAAA,IAAI,EAAC,WAJP;AAKE,UAAA,OAAO,EAAC,QALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFM,CADJ;AAcH;;AAED,UAAG,CAAC,KAAKxC,KAAL,CAAWG,OAAf,EAAuB;AACnB,4BACA,oBAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACA,oBAAC,MAAD;AACA,UAAA,EAAE,EAAC,MADH;AAEA,UAAA,OAAO,EAAE,KAAK8D,WAFd;AAGA,UAAA,QAAQ,MAHR;AAIA,UAAA,aAAa,EAAC,OAJd;AAKA,UAAA,IAAI,EAAC,WALL;AAMA,UAAA,OAAO,EAAC,QANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADA,eAWJ,oBAAC,MAAD;AACI,UAAA,OAAO,EAAE,KAAKD,SADlB;AAEI,UAAA,EAAE,EAAC,MAFP;AAGI,UAAA,MAAM,MAHV;AAII,UAAA,aAAa,EAAC,OAJlB;AAKI,UAAA,IAAI,EAAC,yBALT;AAMI,UAAA,OAAO,EAAC,cANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAXI,CADA,CADA;AA6BH;AAKF,KA5R6C;;AAAA,SAgS9CG,WAhS8C,GAgS/B,MAAK;AAElB,UAAG,KAAKnE,KAAL,CAAWyB,IAAd,EAAmB;AAEjB,4BAGE,oBAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDAHF;AAaD;;AAGD,UAAG,KAAKzB,KAAL,CAAWG,OAAd,EAAsB;AAIpB,4BAGM,oBAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAKI,oBAAC,KAAD;AACA,UAAA,KAAK,EAAE,KAAKG,KAAL,CAAWC,IAAX,CAAgBC,UADvB;AAEA,UAAA,IAAI,EAAE,KAAKF,KAAL,CAAWC,IAAX,CAAgBK,UAFtB;AAGA,UAAA,KAAK,EAAE,KAAKN,KAAL,CAAWC,IAAX,CAAgBO,SAHvB;AAIA,UAAA,IAAI,EAAE,KAAKR,KAAL,CAAWC,IAAX,CAAgBG,KAJtB;AAKA,UAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWC,IAAX,CAAgBS,IALtB;AAMA,UAAA,IAAI,EAAE,KAAKV,KAAL,CAAWC,IAAX,CAAgBW,MANtB;AAOA,UAAA,KAAK,EAAE,KAAKR,KAPZ;AAQA,UAAA,MAAM,EAAE,KAAKQ,MARb;AASA,UAAA,QAAQ,EAAE,KAAKW,QATf;AAUA,UAAA,UAAU,EAAE,KAAKE,UAVjB;AAWA,UAAA,SAAS,EAAE,KAAKC,SAXhB;AAYA,UAAA,KAAK,EAAE,KAAKC,KAZZ;AAaA,UAAA,SAAS,EAAE,KAAKjC,KAAL,CAAW0B,SAbtB;AAcA,UAAA,KAAK,EAAE,KAAK1B,KAAL,CAAWwB,KAdlB;AAeA,UAAA,cAAc,EAAE,KAAKe,cAfrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UALJ,CAHN;AA+BD;;AAID,UAAG,KAAKvC,KAAL,CAAWE,IAAd,EAAmB;AACnB,4BAEI,oBAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAEA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACA,oBAAC,KAAD;AAAQ,UAAA,KAAK,EAAE,KAAKF,KAAL,CAAWwB,KAA1B;AAAkC,UAAA,UAAU,EAAE,KAAKU,UAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADA,CAFA,CAFA,CAFJ;AAkBC;AAIF,KAlX6C;AAAA;;AAoX9CkC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAElE,MAAAA,IAAF;AAAQmC,MAAAA,aAAR;AAAuBC,MAAAA;AAAvB,QAA8C,KAAKtC,KAAzD;;AAMA,QAAG,KAAKM,KAAL,CAAW+D,EAAX,IAAiB,IAApB,EAAyB;AAEzB,0BAEY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAG,QAAA,OAAO,EAAE,KAAKjC,eAAL,CAAqB,KAArB,EAA4B,IAA5B,CAAZ;AAAiD,QAAA,KAAK,EAAC,6BAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,eAGI,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAC,MAAjB;AACA,QAAA,IAAI,EAAElC,IADN;AAEA,QAAA,aAAa,EAAEmC,aAFf;AAGA,QAAA,kBAAkB,EAAEC,kBAHpB;AAIA,QAAA,OAAO,EAAE,KAAKW,KAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAMA,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAAhB,MANA,EAOA,KAAKkB,WAAL,EAPA,EASA,KAAKD,YAAL,EATA,CAHJ,CAFZ;AAoBS;;AAEG,wBAIV;AAAG,MAAA,KAAK,EAAC,gCAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJU;AAMb;;AAzZ6C;;AA4ZhD,eAAenE,uBAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport { Button, Modal, TextArea, Form } from 'semantic-ui-react'\r\nimport Input from \"./Input\"\r\nimport \"./Edit.css\";\r\nimport axios from \"axios\"\r\nimport Forms from \"./Form\"\r\nvar validator = require(\"email-validator\");\r\nvar swearjar = require('swearjar-extended');\r\n\r\nclass ModalExampleCloseConfig extends Component {\r\n  state = { \r\n      queried:false, \r\n      open: false,\r\n      message:false,\r\n      code:\"\",\r\n      tbval:this.props.data.isTextBook,\r\n      eval:this.props.data.email,\r\n      dval:this.props.data.difficulty,\r\n      taval:this.props.takeAgain, \r\n      aval:this.props.data.body,\r\n      uval:this.props.data.useful,\r\n      up:this.props.data.thumbsUp,\r\n      down:this.props.data.thumbsDown,\r\n      id:this.props.id,\r\n      error:0, \r\n      sent:false,\r\n      Profanity:false,\r\n      \r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nemail = (e) =>{\r\n\r\n  this.setState({eval:e})\r\n\r\n}\r\n\r\nTextBook = (term) =>{\r\n\r\n    this.setState({tbval:term})\r\n}\r\n\r\n\r\nuseful = (term) =>{\r\n\r\n  this.setState({uval:term})\r\n}\r\n\r\nDifficulty= (term) =>{\r\n\r\n    this.setState({dval:term})\r\n}\r\n\r\nTakeAgain= (term) =>{\r\n\r\n    this.setState({taval:term})\r\n}\r\n\r\nAbout= (term) =>{\r\n\r\n    this.setState({aval:term})\r\n}\r\n\r\n\r\n  codeChange  = (codeType) =>{\r\n\r\n    this.setState({code:codeType})\r\n\r\n  } \r\n\r\n  closeConfigShow = (closeOnEscape, closeOnDimmerClick) => () => {\r\n    this.setState({ closeOnEscape, closeOnDimmerClick, open: true })\r\n  }\r\n\r\n  ResetProfanity = () =>{\r\n\r\n    this.setState({Profanity:false})\r\n\r\n  }\r\n\r\n\r\n  send = async () =>{\r\n\r\n\r\n    \r\n    var profanity =  swearjar.profane(this.state.aval); \r\n    this.setState({Profanity:profanity})\r\n\r\n    if(this.state.aval.length > 600){\r\n      this.setState({error:1})\r\n    }\r\n\r\n    if(this.state.aval.length <=600 ){\r\n      this.setState({error:0})\r\n    }\r\n\r\n\r\n    console.log(this.state.Profanity)\r\n    console.log(profanity)\r\n\r\n\r\n    this.setState({\r\n      Profanity:profanity,\r\n      error: this.state.aval.length > 600?1:0\r\n  }, () => {\r\n    if(!this.state.Profanity && this.state.error==0){\r\n      const list = {\r\n        \"body\": this.state.aval,\r\n        \"email\":this.state.eval,\r\n        \"difficulty\":this.state.dval,\r\n        \"takeAgain\":this.state.taval,\r\n        \"isTextBook\":this.state.tbval,\r\n        \"thumbsUp\":this.state.up,\r\n        \"thumbsDown\":this.state.down,\r\n        \"id\":this.state.id,\r\n        \"useful\":this.state.uval\r\n      };\r\n    \r\n\r\n\r\n      this.sendEdit(list)\r\n      console.log(\"this happened\")\r\n      this.props.updateState(list)\r\n     \r\n  \r\n     this.close()\r\n    }\r\n\r\n\r\n  });\r\n\r\n\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n  sendEdit =  async (list) => {\r\n\r\n\r\n    let res = await axios.get('/edit', {\r\n      params: {\r\n        courseTitle: this.props.Title,\r\n        review:list, \r\n        id:this.state.id\r\n    \r\n      }\r\n\r\n  \r\n    });\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n  //SendEmail =  async () => {\r\n\r\n    // here you want to query the database, to send an email\r\n\r\n    //let res = await axios.get('/findid', {\r\n      //params: {\r\n      //  courseTitle: this.props.Title,\r\n    //    id:this.state.id\r\n      \r\n  \r\n  //  }\r\n\r\n  \r\n    \r\n  //}\r\n  \r\n\r\n  \r\nsendFeedback =  (templateId, variables) => {\r\n  window.emailjs.send(\r\n    'gmail', templateId,\r\n    variables\r\n    ).then(res => {\r\n      console.log('Email successfully sent!')\r\n    })\r\n    // Handle errors here however you like, or use a React error boundary\r\n    .catch(err => console.error('Oh well, you failed. Here some thoughts on the error that occured:', err))\r\n  }\r\n\r\n  SendEmail = async () => {\r\n  \r\n \r\n  \r\n    let res = await axios.get('/findid', {\r\n      params: {\r\n        courseTitle: this.props.Title,\r\n        id:this.state.id\r\n    }});\r\n\r\n    console.log(\"email would have sent\")\r\n    //const templateId = 'template_swHMraBb';\r\n    //this.sendFeedback(templateId, {message_html: this.state.id, from_name: \"David\", reply_to: res.data})\r\n\r\n    this.setState({sent:true})\r\n    // Here you need to send some kind of message, so that it says \"email sent sucessfully\"\r\n\r\n\r\n\r\n  }\r\n  \r\n\r\n  close = () => this.setState({ open: false, message:false, error:0, sent:false})\r\n  Submitclose = async () => {\r\n  \r\n \r\n  if(this.state.code == this.props.id){\r\n  this.setState({ message:true })\r\n  }else{\r\n\r\n    // Here you need to add logic to make it display some kind of error\r\n    //\r\n    this.setState({error:1})\r\n\r\n\r\n  }\r\n\r\n  \r\n \r\n  }\r\n\r\n  renderButton=()=>{\r\n    if(this.state.sent){\r\n      return;\r\n    }\r\n\r\n\r\n    if(this.state.message){\r\n\r\n        return(\r\n            <Modal.Actions>\r\n\r\n      <Button\r\n        onClick={this.send}\r\n        positive\r\n        labelPosition='right'\r\n        icon='checkmark'\r\n        content='Submit'\r\n        />\r\n              \r\n        </Modal.Actions>\r\n            );\r\n\r\n    }\r\n\r\n    if(!this.state.message){\r\n        return(\r\n        <Modal.Actions>\r\n        <center>\r\n        <Button\r\n        id=\"SWAG\"\r\n        onClick={this.Submitclose}\r\n        positive\r\n        labelPosition='right'\r\n        icon='checkmark'\r\n        content='Submit'\r\n        \r\n        />\r\n    \r\n    <Button\r\n        onClick={this.SendEmail}\r\n        id=\"SWAG\"\r\n        yellow\r\n        labelPosition='right'\r\n        icon='question circle outline'\r\n        content='Forgot Code?'\r\n        />\r\n\r\n    </center>\r\n\r\n  \r\n\r\n\r\n    </Modal.Actions>\r\n        );\r\n    }\r\n\r\n    \r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  renderModal =  () =>{\r\n\r\n    if(this.state.sent){\r\n\r\n      return(\r\n\r\n\r\n        <Modal.Content>\r\n\r\n        Your edit code has been sent to your email!\r\n\r\n        </Modal.Content>\r\n\r\n\r\n    );\r\n\r\n\r\n    }\r\n\r\n\r\n    if(this.state.message){\r\n\r\n     \r\n\r\n      return(\r\n\r\n\r\n            <Modal.Content>\r\n\r\n\r\n  \r\n    \r\n                <Forms \r\n                tbval={this.props.data.isTextBook} \r\n                dval={this.props.data.difficulty} \r\n                taval={this.props.data.takeAgain}\r\n                eval={this.props.data.email}\r\n                aval={this.props.data.body} \r\n                uval={this.props.data.useful}\r\n                email={this.email}\r\n                useful={this.useful}\r\n                TextBook={this.TextBook}\r\n                Difficulty={this.Difficulty} \r\n                TakeAgain={this.TakeAgain}\r\n                About={this.About}\r\n                Profanity={this.state.Profanity}\r\n                Error={this.state.error}\r\n                ResetProfanity={this.ResetProfanity}\r\n                />\r\n    \r\n            </Modal.Content>\r\n    \r\n    \r\n        );\r\n\r\n    }\r\n\r\n\r\n\r\n    if(this.state.open){\r\n    return(\r\n\r\n        <Modal.Content>\r\n\r\n        <Form>\r\n\r\n        <center>\r\n        <Input  error={this.state.error } codeChange={this.codeChange}/>\r\n        </center>\r\n       \r\n\r\n        </Form>\r\n\r\n        </Modal.Content>\r\n\r\n\r\n\r\n    );\r\n    }\r\n\r\n   \r\n\r\n  }\r\n\r\n  render() {\r\n    const { open, closeOnEscape, closeOnDimmerClick } = this.state\r\n\r\n    \r\n\r\n\r\n\r\n    if(this.props.on == true){\r\n\r\n    return (\r\n\r\n                <div>\r\n                    <i onClick={this.closeConfigShow(false, true)}   class=\"pencil alternate icon large\"></i>\r\n                \r\n                    <Modal className=\"edit\"\r\n                    open={open}\r\n                    closeOnEscape={closeOnEscape}\r\n                    closeOnDimmerClick={closeOnDimmerClick}\r\n                    onClose={this.close}\r\n                    >\r\n                    <Modal.Header>  <center> Edit Post: Provide Edit Code! </center> </Modal.Header>\r\n                   {this.renderModal()}\r\n                \r\n                   {this.renderButton()}\r\n\r\n                    </Modal>\r\n\r\n                </div>\r\n                )\r\n            }\r\n\r\n                return(\r\n\r\n\r\n                    \r\n      <i class=\" large pen square  icon large \"></i>\r\n                );\r\n  }\r\n}\r\n\r\nexport default ModalExampleCloseConfig\r\n"]},"metadata":{},"sourceType":"module"}