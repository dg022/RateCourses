{"ast":null,"code":"var global = require('../internals/global');\n\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nvar has = require('../internals/has');\n\nvar setGlobal = require('../internals/set-global');\n\nvar inspectSource = require('../internals/inspect-source');\n\nvar InternalStateModule = require('../internals/internal-state');\n\nvar getInternalState = InternalStateModule.get;\nvar enforceInternalState = InternalStateModule.enforce;\nvar TEMPLATE = String(String).split('String');\n(module.exports = function (O, key, value, options) {\n  var unsafe = options ? !!options.unsafe : false;\n  var simple = options ? !!options.enumerable : false;\n  var noTargetGet = options ? !!options.noTargetGet : false;\n\n  if (typeof value == 'function') {\n    if (typeof key == 'string' && !has(value, 'name')) createNonEnumerableProperty(value, 'name', key);\n    enforceInternalState(value).source = TEMPLATE.join(typeof key == 'string' ? key : '');\n  }\n\n  if (O === global) {\n    if (simple) O[key] = value;else setGlobal(key, value);\n    return;\n  } else if (!unsafe) {\n    delete O[key];\n  } else if (!noTargetGet && O[key]) {\n    simple = true;\n  }\n\n  if (simple) O[key] = value;else createNonEnumerableProperty(O, key, value); // add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, 'toString', function toString() {\n  return typeof this == 'function' && getInternalState(this).source || inspectSource(this);\n});","map":{"version":3,"sources":["C:/Users/david/react/RateCourses/client/node_modules/core-js/internals/redefine.js"],"names":["global","require","createNonEnumerableProperty","has","setGlobal","inspectSource","InternalStateModule","getInternalState","get","enforceInternalState","enforce","TEMPLATE","String","split","module","exports","O","key","value","options","unsafe","simple","enumerable","noTargetGet","source","join","Function","prototype","toString"],"mappings":"AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,qBAAD,CAApB;;AACA,IAAIC,2BAA2B,GAAGD,OAAO,CAAC,6CAAD,CAAzC;;AACA,IAAIE,GAAG,GAAGF,OAAO,CAAC,kBAAD,CAAjB;;AACA,IAAIG,SAAS,GAAGH,OAAO,CAAC,yBAAD,CAAvB;;AACA,IAAII,aAAa,GAAGJ,OAAO,CAAC,6BAAD,CAA3B;;AACA,IAAIK,mBAAmB,GAAGL,OAAO,CAAC,6BAAD,CAAjC;;AAEA,IAAIM,gBAAgB,GAAGD,mBAAmB,CAACE,GAA3C;AACA,IAAIC,oBAAoB,GAAGH,mBAAmB,CAACI,OAA/C;AACA,IAAIC,QAAQ,GAAGC,MAAM,CAACA,MAAD,CAAN,CAAeC,KAAf,CAAqB,QAArB,CAAf;AAEA,CAACC,MAAM,CAACC,OAAP,GAAiB,UAAUC,CAAV,EAAaC,GAAb,EAAkBC,KAAlB,EAAyBC,OAAzB,EAAkC;AAClD,MAAIC,MAAM,GAAGD,OAAO,GAAG,CAAC,CAACA,OAAO,CAACC,MAAb,GAAsB,KAA1C;AACA,MAAIC,MAAM,GAAGF,OAAO,GAAG,CAAC,CAACA,OAAO,CAACG,UAAb,GAA0B,KAA9C;AACA,MAAIC,WAAW,GAAGJ,OAAO,GAAG,CAAC,CAACA,OAAO,CAACI,WAAb,GAA2B,KAApD;;AACA,MAAI,OAAOL,KAAP,IAAgB,UAApB,EAAgC;AAC9B,QAAI,OAAOD,GAAP,IAAc,QAAd,IAA0B,CAACd,GAAG,CAACe,KAAD,EAAQ,MAAR,CAAlC,EAAmDhB,2BAA2B,CAACgB,KAAD,EAAQ,MAAR,EAAgBD,GAAhB,CAA3B;AACnDR,IAAAA,oBAAoB,CAACS,KAAD,CAApB,CAA4BM,MAA5B,GAAqCb,QAAQ,CAACc,IAAT,CAAc,OAAOR,GAAP,IAAc,QAAd,GAAyBA,GAAzB,GAA+B,EAA7C,CAArC;AACD;;AACD,MAAID,CAAC,KAAKhB,MAAV,EAAkB;AAChB,QAAIqB,MAAJ,EAAYL,CAAC,CAACC,GAAD,CAAD,GAASC,KAAT,CAAZ,KACKd,SAAS,CAACa,GAAD,EAAMC,KAAN,CAAT;AACL;AACD,GAJD,MAIO,IAAI,CAACE,MAAL,EAAa;AAClB,WAAOJ,CAAC,CAACC,GAAD,CAAR;AACD,GAFM,MAEA,IAAI,CAACM,WAAD,IAAgBP,CAAC,CAACC,GAAD,CAArB,EAA4B;AACjCI,IAAAA,MAAM,GAAG,IAAT;AACD;;AACD,MAAIA,MAAJ,EAAYL,CAAC,CAACC,GAAD,CAAD,GAASC,KAAT,CAAZ,KACKhB,2BAA2B,CAACc,CAAD,EAAIC,GAAJ,EAASC,KAAT,CAA3B,CAlB6C,CAmBpD;AACC,CApBD,EAoBGQ,QAAQ,CAACC,SApBZ,EAoBuB,UApBvB,EAoBmC,SAASC,QAAT,GAAoB;AACrD,SAAO,OAAO,IAAP,IAAe,UAAf,IAA6BrB,gBAAgB,CAAC,IAAD,CAAhB,CAAuBiB,MAApD,IAA8DnB,aAAa,CAAC,IAAD,CAAlF;AACD,CAtBD","sourcesContent":["var global = require('../internals/global');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar has = require('../internals/has');\nvar setGlobal = require('../internals/set-global');\nvar inspectSource = require('../internals/inspect-source');\nvar InternalStateModule = require('../internals/internal-state');\n\nvar getInternalState = InternalStateModule.get;\nvar enforceInternalState = InternalStateModule.enforce;\nvar TEMPLATE = String(String).split('String');\n\n(module.exports = function (O, key, value, options) {\n  var unsafe = options ? !!options.unsafe : false;\n  var simple = options ? !!options.enumerable : false;\n  var noTargetGet = options ? !!options.noTargetGet : false;\n  if (typeof value == 'function') {\n    if (typeof key == 'string' && !has(value, 'name')) createNonEnumerableProperty(value, 'name', key);\n    enforceInternalState(value).source = TEMPLATE.join(typeof key == 'string' ? key : '');\n  }\n  if (O === global) {\n    if (simple) O[key] = value;\n    else setGlobal(key, value);\n    return;\n  } else if (!unsafe) {\n    delete O[key];\n  } else if (!noTargetGet && O[key]) {\n    simple = true;\n  }\n  if (simple) O[key] = value;\n  else createNonEnumerableProperty(O, key, value);\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, 'toString', function toString() {\n  return typeof this == 'function' && getInternalState(this).source || inspectSource(this);\n});\n"]},"metadata":{},"sourceType":"script"}