{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\david\\\\react\\\\RateCourses\\\\client\\\\src\\\\Components\\\\Scale.js\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Slider from \"@material-ui/core/Slider\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: 300\n  },\n  margin: {\n    height: theme.spacing(2)\n  }\n}));\n\nhandleSliderChange = (event, newValue) => {\n  // Here, what we want to do, call a deeply nested call back function, which then notifies all the components of the new time\n  this.props.Difficulty(newValue);\n};\n\nconst marks = [{\n  value: 1,\n  label: \"Hard\"\n}, {\n  value: 2,\n  label: \"\"\n}, {\n  value: 3,\n  label: \"Average\"\n}, {\n  value: 4,\n  label: \"\"\n}, {\n  value: 5,\n  label: \"Total Bird\"\n}];\n\nfunction valuetext(value) {\n  return `${value}`;\n}\n\nexport default function DiscreteSlider() {\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Slider, {\n    defaultValue: 1,\n    getAriaValueText: valuetext,\n    \"aria-labelledby\": \"discrete-slider-custom\",\n    step: 0.5,\n    max: 5,\n    min: 1,\n    onChange: this.handleSliderChange,\n    valueLabelDisplay: \"auto\",\n    marks: marks,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/david/react/RateCourses/client/src/Components/Scale.js"],"names":["React","makeStyles","Typography","Slider","useStyles","theme","root","width","margin","height","spacing","handleSliderChange","event","newValue","props","Difficulty","marks","value","label","valuetext","DiscreteSlider","classes"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,MAAMC,SAAS,GAAGH,UAAU,CAACI,KAAK,KAAK;AACrCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE;AADH,GAD+B;AAIrCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,MAAM,EAAEJ,KAAK,CAACK,OAAN,CAAc,CAAd;AADF;AAJ6B,CAAL,CAAN,CAA5B;;AASAC,kBAAkB,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAoB;AAErC;AACA,OAAKC,KAAL,CAAWC,UAAX,CAAsBF,QAAtB;AACD,CAJH;;AAOA,MAAMG,KAAK,GAAG,CACZ;AACEC,EAAAA,KAAK,EAAE,CADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CADY,EAKZ;AACED,EAAAA,KAAK,EAAE,CADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CALY,EASZ;AACED,EAAAA,KAAK,EAAE,CADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CATY,EAaZ;AACED,EAAAA,KAAK,EAAE,CADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CAbY,EAiBZ;AACED,EAAAA,KAAK,EAAE,CADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CAjBY,CAAd;;AAuBA,SAASC,SAAT,CAAmBF,KAAnB,EAA0B;AACxB,SAAQ,GAAEA,KAAM,EAAhB;AACD;;AAED,eAAe,SAASG,cAAT,GAA0B;AACvC,QAAMC,OAAO,GAAGjB,SAAS,EAAzB;AAEA,sBACE;AAAK,IAAA,SAAS,EAAEiB,OAAO,CAACf,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,YAAY,EAAE,CADhB;AAEE,IAAA,gBAAgB,EAAEa,SAFpB;AAGE,uBAAgB,wBAHlB;AAIE,IAAA,IAAI,EAAE,GAJR;AAKE,IAAA,GAAG,EAAE,CALP;AAME,IAAA,GAAG,EAAE,CANP;AAOE,IAAA,QAAQ,EAAE,KAAKR,kBAPjB;AAQE,IAAA,iBAAiB,EAAC,MARpB;AASE,IAAA,KAAK,EAAEK,KATT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAeD","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: 300\r\n  },\r\n  margin: {\r\n    height: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nhandleSliderChange = (event, newValue)=> {\r\n\r\n    // Here, what we want to do, call a deeply nested call back function, which then notifies all the components of the new time\r\n    this.props.Difficulty(newValue); \r\n  };\r\n\r\n\r\nconst marks = [\r\n  {\r\n    value: 1,\r\n    label: \"Hard\"\r\n  },\r\n  {\r\n    value: 2,\r\n    label: \"\"\r\n  },\r\n  {\r\n    value: 3,\r\n    label: \"Average\"\r\n  },\r\n  {\r\n    value: 4,\r\n    label: \"\"\r\n  },\r\n  {\r\n    value: 5,\r\n    label: \"Total Bird\"\r\n  }\r\n];\r\n\r\nfunction valuetext(value) {\r\n  return `${value}`;\r\n}\r\n\r\nexport default function DiscreteSlider() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Slider\r\n        defaultValue={1}\r\n        getAriaValueText={valuetext}\r\n        aria-labelledby=\"discrete-slider-custom\"\r\n        step={0.5}\r\n        max={5}\r\n        min={1}\r\n        onChange={this.handleSliderChange}\r\n        valueLabelDisplay=\"auto\"\r\n        marks={marks}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}