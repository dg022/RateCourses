{"ast":null,"code":"// `Symbol.prototype.description` getter\n// https://tc39.github.io/ecma262/#sec-symbol.prototype.description\n'use strict';\n\nvar $ = require('../internals/export');\n\nvar DESCRIPTORS = require('../internals/descriptors');\n\nvar global = require('../internals/global');\n\nvar has = require('../internals/has');\n\nvar isObject = require('../internals/is-object');\n\nvar defineProperty = require('../internals/object-define-property').f;\n\nvar copyConstructorProperties = require('../internals/copy-constructor-properties');\n\nvar NativeSymbol = global.Symbol;\n\nif (DESCRIPTORS && typeof NativeSymbol == 'function' && (!('description' in NativeSymbol.prototype) || // Safari 12 bug\nNativeSymbol().description !== undefined)) {\n  var EmptyStringDescriptionStore = {}; // wrap Symbol constructor for correct work with undefined description\n\n  var SymbolWrapper = function Symbol() {\n    var description = arguments.length < 1 || arguments[0] === undefined ? undefined : String(arguments[0]);\n    var result = this instanceof SymbolWrapper ? new NativeSymbol(description) // in Edge 13, String(Symbol(undefined)) === 'Symbol(undefined)'\n    : description === undefined ? NativeSymbol() : NativeSymbol(description);\n    if (description === '') EmptyStringDescriptionStore[result] = true;\n    return result;\n  };\n\n  copyConstructorProperties(SymbolWrapper, NativeSymbol);\n  var symbolPrototype = SymbolWrapper.prototype = NativeSymbol.prototype;\n  symbolPrototype.constructor = SymbolWrapper;\n  var symbolToString = symbolPrototype.toString;\n  var native = String(NativeSymbol('test')) == 'Symbol(test)';\n  var regexp = /^Symbol\\((.*)\\)[^)]+$/;\n  defineProperty(symbolPrototype, 'description', {\n    configurable: true,\n    get: function description() {\n      var symbol = isObject(this) ? this.valueOf() : this;\n      var string = symbolToString.call(symbol);\n      if (has(EmptyStringDescriptionStore, symbol)) return '';\n      var desc = native ? string.slice(7, -1) : string.replace(regexp, '$1');\n      return desc === '' ? undefined : desc;\n    }\n  });\n  $({\n    global: true,\n    forced: true\n  }, {\n    Symbol: SymbolWrapper\n  });\n}","map":{"version":3,"sources":["C:/Users/david/react/RateCourses/client/node_modules/core-js/modules/es.symbol.description.js"],"names":["$","require","DESCRIPTORS","global","has","isObject","defineProperty","f","copyConstructorProperties","NativeSymbol","Symbol","prototype","description","undefined","EmptyStringDescriptionStore","SymbolWrapper","arguments","length","String","result","symbolPrototype","constructor","symbolToString","toString","native","regexp","configurable","get","symbol","valueOf","string","call","desc","slice","replace","forced"],"mappings":"AAAA;AACA;AACA;;AACA,IAAIA,CAAC,GAAGC,OAAO,CAAC,qBAAD,CAAf;;AACA,IAAIC,WAAW,GAAGD,OAAO,CAAC,0BAAD,CAAzB;;AACA,IAAIE,MAAM,GAAGF,OAAO,CAAC,qBAAD,CAApB;;AACA,IAAIG,GAAG,GAAGH,OAAO,CAAC,kBAAD,CAAjB;;AACA,IAAII,QAAQ,GAAGJ,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAIK,cAAc,GAAGL,OAAO,CAAC,qCAAD,CAAP,CAA+CM,CAApE;;AACA,IAAIC,yBAAyB,GAAGP,OAAO,CAAC,0CAAD,CAAvC;;AAEA,IAAIQ,YAAY,GAAGN,MAAM,CAACO,MAA1B;;AAEA,IAAIR,WAAW,IAAI,OAAOO,YAAP,IAAuB,UAAtC,KAAqD,EAAE,iBAAiBA,YAAY,CAACE,SAAhC,KACvD;AACAF,YAAY,GAAGG,WAAf,KAA+BC,SAF7B,CAAJ,EAGG;AACD,MAAIC,2BAA2B,GAAG,EAAlC,CADC,CAED;;AACA,MAAIC,aAAa,GAAG,SAASL,MAAT,GAAkB;AACpC,QAAIE,WAAW,GAAGI,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBH,SAAzC,GAAqDA,SAArD,GAAiEK,MAAM,CAACF,SAAS,CAAC,CAAD,CAAV,CAAzF;AACA,QAAIG,MAAM,GAAG,gBAAgBJ,aAAhB,GACT,IAAIN,YAAJ,CAAiBG,WAAjB,CADS,CAEX;AAFW,MAGTA,WAAW,KAAKC,SAAhB,GAA4BJ,YAAY,EAAxC,GAA6CA,YAAY,CAACG,WAAD,CAH7D;AAIA,QAAIA,WAAW,KAAK,EAApB,EAAwBE,2BAA2B,CAACK,MAAD,CAA3B,GAAsC,IAAtC;AACxB,WAAOA,MAAP;AACD,GARD;;AASAX,EAAAA,yBAAyB,CAACO,aAAD,EAAgBN,YAAhB,CAAzB;AACA,MAAIW,eAAe,GAAGL,aAAa,CAACJ,SAAd,GAA0BF,YAAY,CAACE,SAA7D;AACAS,EAAAA,eAAe,CAACC,WAAhB,GAA8BN,aAA9B;AAEA,MAAIO,cAAc,GAAGF,eAAe,CAACG,QAArC;AACA,MAAIC,MAAM,GAAGN,MAAM,CAACT,YAAY,CAAC,MAAD,CAAb,CAAN,IAAgC,cAA7C;AACA,MAAIgB,MAAM,GAAG,uBAAb;AACAnB,EAAAA,cAAc,CAACc,eAAD,EAAkB,aAAlB,EAAiC;AAC7CM,IAAAA,YAAY,EAAE,IAD+B;AAE7CC,IAAAA,GAAG,EAAE,SAASf,WAAT,GAAuB;AAC1B,UAAIgB,MAAM,GAAGvB,QAAQ,CAAC,IAAD,CAAR,GAAiB,KAAKwB,OAAL,EAAjB,GAAkC,IAA/C;AACA,UAAIC,MAAM,GAAGR,cAAc,CAACS,IAAf,CAAoBH,MAApB,CAAb;AACA,UAAIxB,GAAG,CAACU,2BAAD,EAA8Bc,MAA9B,CAAP,EAA8C,OAAO,EAAP;AAC9C,UAAII,IAAI,GAAGR,MAAM,GAAGM,MAAM,CAACG,KAAP,CAAa,CAAb,EAAgB,CAAC,CAAjB,CAAH,GAAyBH,MAAM,CAACI,OAAP,CAAeT,MAAf,EAAuB,IAAvB,CAA1C;AACA,aAAOO,IAAI,KAAK,EAAT,GAAcnB,SAAd,GAA0BmB,IAAjC;AACD;AAR4C,GAAjC,CAAd;AAWAhC,EAAAA,CAAC,CAAC;AAAEG,IAAAA,MAAM,EAAE,IAAV;AAAgBgC,IAAAA,MAAM,EAAE;AAAxB,GAAD,EAAiC;AAChCzB,IAAAA,MAAM,EAAEK;AADwB,GAAjC,CAAD;AAGD","sourcesContent":["// `Symbol.prototype.description` getter\n// https://tc39.github.io/ecma262/#sec-symbol.prototype.description\n'use strict';\nvar $ = require('../internals/export');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar global = require('../internals/global');\nvar has = require('../internals/has');\nvar isObject = require('../internals/is-object');\nvar defineProperty = require('../internals/object-define-property').f;\nvar copyConstructorProperties = require('../internals/copy-constructor-properties');\n\nvar NativeSymbol = global.Symbol;\n\nif (DESCRIPTORS && typeof NativeSymbol == 'function' && (!('description' in NativeSymbol.prototype) ||\n  // Safari 12 bug\n  NativeSymbol().description !== undefined\n)) {\n  var EmptyStringDescriptionStore = {};\n  // wrap Symbol constructor for correct work with undefined description\n  var SymbolWrapper = function Symbol() {\n    var description = arguments.length < 1 || arguments[0] === undefined ? undefined : String(arguments[0]);\n    var result = this instanceof SymbolWrapper\n      ? new NativeSymbol(description)\n      // in Edge 13, String(Symbol(undefined)) === 'Symbol(undefined)'\n      : description === undefined ? NativeSymbol() : NativeSymbol(description);\n    if (description === '') EmptyStringDescriptionStore[result] = true;\n    return result;\n  };\n  copyConstructorProperties(SymbolWrapper, NativeSymbol);\n  var symbolPrototype = SymbolWrapper.prototype = NativeSymbol.prototype;\n  symbolPrototype.constructor = SymbolWrapper;\n\n  var symbolToString = symbolPrototype.toString;\n  var native = String(NativeSymbol('test')) == 'Symbol(test)';\n  var regexp = /^Symbol\\((.*)\\)[^)]+$/;\n  defineProperty(symbolPrototype, 'description', {\n    configurable: true,\n    get: function description() {\n      var symbol = isObject(this) ? this.valueOf() : this;\n      var string = symbolToString.call(symbol);\n      if (has(EmptyStringDescriptionStore, symbol)) return '';\n      var desc = native ? string.slice(7, -1) : string.replace(regexp, '$1');\n      return desc === '' ? undefined : desc;\n    }\n  });\n\n  $({ global: true, forced: true }, {\n    Symbol: SymbolWrapper\n  });\n}\n"]},"metadata":{},"sourceType":"script"}