{"ast":null,"code":"/**\n *\n * @namespace faker.hacker\n */\nvar Hacker = function Hacker(faker) {\n  var self = this;\n  /**\n   * abbreviation\n   *\n   * @method faker.hacker.abbreviation\n   */\n\n  self.abbreviation = function () {\n    return faker.random.arrayElement(faker.definitions.hacker.abbreviation);\n  };\n  /**\n   * adjective\n   *\n   * @method faker.hacker.adjective\n   */\n\n\n  self.adjective = function () {\n    return faker.random.arrayElement(faker.definitions.hacker.adjective);\n  };\n  /**\n   * noun\n   *\n   * @method faker.hacker.noun\n   */\n\n\n  self.noun = function () {\n    return faker.random.arrayElement(faker.definitions.hacker.noun);\n  };\n  /**\n   * verb\n   *\n   * @method faker.hacker.verb\n   */\n\n\n  self.verb = function () {\n    return faker.random.arrayElement(faker.definitions.hacker.verb);\n  };\n  /**\n   * ingverb\n   *\n   * @method faker.hacker.ingverb\n   */\n\n\n  self.ingverb = function () {\n    return faker.random.arrayElement(faker.definitions.hacker.ingverb);\n  };\n  /**\n   * phrase\n   *\n   * @method faker.hacker.phrase\n   */\n\n\n  self.phrase = function () {\n    var data = {\n      abbreviation: self.abbreviation,\n      adjective: self.adjective,\n      ingverb: self.ingverb,\n      noun: self.noun,\n      verb: self.verb\n    };\n    var phrase = faker.random.arrayElement([\"If we {{verb}} the {{noun}}, we can get to the {{abbreviation}} {{noun}} through the {{adjective}} {{abbreviation}} {{noun}}!\", \"We need to {{verb}} the {{adjective}} {{abbreviation}} {{noun}}!\", \"Try to {{verb}} the {{abbreviation}} {{noun}}, maybe it will {{verb}} the {{adjective}} {{noun}}!\", \"You can't {{verb}} the {{noun}} without {{ingverb}} the {{adjective}} {{abbreviation}} {{noun}}!\", \"Use the {{adjective}} {{abbreviation}} {{noun}}, then you can {{verb}} the {{adjective}} {{noun}}!\", \"The {{abbreviation}} {{noun}} is down, {{verb}} the {{adjective}} {{noun}} so we can {{verb}} the {{abbreviation}} {{noun}}!\", \"{{ingverb}} the {{noun}} won't do anything, we need to {{verb}} the {{adjective}} {{abbreviation}} {{noun}}!\", \"I'll {{verb}} the {{adjective}} {{abbreviation}} {{noun}}, that should {{noun}} the {{abbreviation}} {{noun}}!\"]);\n    return faker.helpers.mustache(phrase, data);\n  };\n\n  return self;\n};\n\nmodule['exports'] = Hacker;","map":{"version":3,"sources":["C:/Users/david/react/RateCourses/client/node_modules/faker/lib/hacker.js"],"names":["Hacker","faker","self","abbreviation","random","arrayElement","definitions","hacker","adjective","noun","verb","ingverb","phrase","data","helpers","mustache","module"],"mappings":"AAAA;;;;AAIA,IAAIA,MAAM,GAAG,SAATA,MAAS,CAAUC,KAAV,EAAiB;AAC5B,MAAIC,IAAI,GAAG,IAAX;AAEA;;;;;;AAKAA,EAAAA,IAAI,CAACC,YAAL,GAAoB,YAAY;AAC9B,WAAOF,KAAK,CAACG,MAAN,CAAaC,YAAb,CAA0BJ,KAAK,CAACK,WAAN,CAAkBC,MAAlB,CAAyBJ,YAAnD,CAAP;AACD,GAFD;AAIA;;;;;;;AAKAD,EAAAA,IAAI,CAACM,SAAL,GAAiB,YAAY;AAC3B,WAAOP,KAAK,CAACG,MAAN,CAAaC,YAAb,CAA0BJ,KAAK,CAACK,WAAN,CAAkBC,MAAlB,CAAyBC,SAAnD,CAAP;AACD,GAFD;AAIA;;;;;;;AAKAN,EAAAA,IAAI,CAACO,IAAL,GAAY,YAAY;AACtB,WAAOR,KAAK,CAACG,MAAN,CAAaC,YAAb,CAA0BJ,KAAK,CAACK,WAAN,CAAkBC,MAAlB,CAAyBE,IAAnD,CAAP;AACD,GAFD;AAIA;;;;;;;AAKAP,EAAAA,IAAI,CAACQ,IAAL,GAAY,YAAY;AACtB,WAAOT,KAAK,CAACG,MAAN,CAAaC,YAAb,CAA0BJ,KAAK,CAACK,WAAN,CAAkBC,MAAlB,CAAyBG,IAAnD,CAAP;AACD,GAFD;AAIA;;;;;;;AAKAR,EAAAA,IAAI,CAACS,OAAL,GAAe,YAAY;AACzB,WAAOV,KAAK,CAACG,MAAN,CAAaC,YAAb,CAA0BJ,KAAK,CAACK,WAAN,CAAkBC,MAAlB,CAAyBI,OAAnD,CAAP;AACD,GAFD;AAIA;;;;;;;AAKAT,EAAAA,IAAI,CAACU,MAAL,GAAc,YAAY;AAExB,QAAIC,IAAI,GAAG;AACTV,MAAAA,YAAY,EAAED,IAAI,CAACC,YADV;AAETK,MAAAA,SAAS,EAAEN,IAAI,CAACM,SAFP;AAGTG,MAAAA,OAAO,EAAET,IAAI,CAACS,OAHL;AAITF,MAAAA,IAAI,EAAEP,IAAI,CAACO,IAJF;AAKTC,MAAAA,IAAI,EAAER,IAAI,CAACQ;AALF,KAAX;AAQA,QAAIE,MAAM,GAAGX,KAAK,CAACG,MAAN,CAAaC,YAAb,CAA0B,CAAE,+HAAF,EACrC,kEADqC,EAErC,mGAFqC,EAGrC,kGAHqC,EAIrC,oGAJqC,EAKrC,8HALqC,EAMrC,8GANqC,EAOrC,gHAPqC,CAA1B,CAAb;AAUD,WAAOJ,KAAK,CAACa,OAAN,CAAcC,QAAd,CAAuBH,MAAvB,EAA+BC,IAA/B,CAAP;AAEA,GAtBD;;AAwBA,SAAOX,IAAP;AACD,CA9ED;;AAgFAc,MAAM,CAAC,SAAD,CAAN,GAAoBhB,MAApB","sourcesContent":["/**\n *\n * @namespace faker.hacker\n */\nvar Hacker = function (faker) {\n  var self = this;\n  \n  /**\n   * abbreviation\n   *\n   * @method faker.hacker.abbreviation\n   */\n  self.abbreviation = function () {\n    return faker.random.arrayElement(faker.definitions.hacker.abbreviation);\n  };\n\n  /**\n   * adjective\n   *\n   * @method faker.hacker.adjective\n   */\n  self.adjective = function () {\n    return faker.random.arrayElement(faker.definitions.hacker.adjective);\n  };\n\n  /**\n   * noun\n   *\n   * @method faker.hacker.noun\n   */\n  self.noun = function () {\n    return faker.random.arrayElement(faker.definitions.hacker.noun);\n  };\n\n  /**\n   * verb\n   *\n   * @method faker.hacker.verb\n   */\n  self.verb = function () {\n    return faker.random.arrayElement(faker.definitions.hacker.verb);\n  };\n\n  /**\n   * ingverb\n   *\n   * @method faker.hacker.ingverb\n   */\n  self.ingverb = function () {\n    return faker.random.arrayElement(faker.definitions.hacker.ingverb);\n  };\n\n  /**\n   * phrase\n   *\n   * @method faker.hacker.phrase\n   */\n  self.phrase = function () {\n\n    var data = {\n      abbreviation: self.abbreviation,\n      adjective: self.adjective,\n      ingverb: self.ingverb,\n      noun: self.noun,\n      verb: self.verb\n    };\n\n    var phrase = faker.random.arrayElement([ \"If we {{verb}} the {{noun}}, we can get to the {{abbreviation}} {{noun}} through the {{adjective}} {{abbreviation}} {{noun}}!\",\n      \"We need to {{verb}} the {{adjective}} {{abbreviation}} {{noun}}!\",\n      \"Try to {{verb}} the {{abbreviation}} {{noun}}, maybe it will {{verb}} the {{adjective}} {{noun}}!\",\n      \"You can't {{verb}} the {{noun}} without {{ingverb}} the {{adjective}} {{abbreviation}} {{noun}}!\",\n      \"Use the {{adjective}} {{abbreviation}} {{noun}}, then you can {{verb}} the {{adjective}} {{noun}}!\",\n      \"The {{abbreviation}} {{noun}} is down, {{verb}} the {{adjective}} {{noun}} so we can {{verb}} the {{abbreviation}} {{noun}}!\",\n      \"{{ingverb}} the {{noun}} won't do anything, we need to {{verb}} the {{adjective}} {{abbreviation}} {{noun}}!\",\n      \"I'll {{verb}} the {{adjective}} {{abbreviation}} {{noun}}, that should {{noun}} the {{abbreviation}} {{noun}}!\"\n   ]);\n\n   return faker.helpers.mustache(phrase, data);\n\n  };\n  \n  return self;\n};\n\nmodule['exports'] = Hacker;"]},"metadata":{},"sourceType":"script"}