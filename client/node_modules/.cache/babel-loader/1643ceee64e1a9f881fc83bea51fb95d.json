{"ast":null,"code":"/**\n *\n * @namespace faker.name\n */\nfunction Name(faker) {\n  /**\n   * firstName\n   *\n   * @method firstName\n   * @param {mixed} gender\n   * @memberof faker.name\n   */\n  this.firstName = function (gender) {\n    if (typeof faker.definitions.name.male_first_name !== \"undefined\" && typeof faker.definitions.name.female_first_name !== \"undefined\") {\n      // some locale datasets ( like ru ) have first_name split by gender. since the name.first_name field does not exist in these datasets,\n      // we must randomly pick a name from either gender array so faker.name.firstName will return the correct locale data ( and not fallback )\n      if (typeof gender !== 'number') {\n        gender = faker.random.number(1);\n      }\n\n      if (gender === 0) {\n        return faker.random.arrayElement(faker.locales[faker.locale].name.male_first_name);\n      } else {\n        return faker.random.arrayElement(faker.locales[faker.locale].name.female_first_name);\n      }\n    }\n\n    return faker.random.arrayElement(faker.definitions.name.first_name);\n  };\n  /**\n   * lastName\n   *\n   * @method lastName\n   * @param {mixed} gender\n   * @memberof faker.name\n   */\n\n\n  this.lastName = function (gender) {\n    if (typeof faker.definitions.name.male_last_name !== \"undefined\" && typeof faker.definitions.name.female_last_name !== \"undefined\") {\n      // some locale datasets ( like ru ) have last_name split by gender. i have no idea how last names can have genders, but also i do not speak russian\n      // see above comment of firstName method\n      if (typeof gender !== 'number') {\n        gender = faker.random.number(1);\n      }\n\n      if (gender === 0) {\n        return faker.random.arrayElement(faker.locales[faker.locale].name.male_last_name);\n      } else {\n        return faker.random.arrayElement(faker.locales[faker.locale].name.female_last_name);\n      }\n    }\n\n    return faker.random.arrayElement(faker.definitions.name.last_name);\n  };\n  /**\n   * findName\n   *\n   * @method findName\n   * @param {string} firstName\n   * @param {string} lastName\n   * @param {mixed} gender\n   * @memberof faker.name\n   */\n\n\n  this.findName = function (firstName, lastName, gender) {\n    var r = faker.random.number(8);\n    var prefix, suffix; // in particular locales first and last names split by gender,\n    // thus we keep consistency by passing 0 as male and 1 as female\n\n    if (typeof gender !== 'number') {\n      gender = faker.random.number(1);\n    }\n\n    firstName = firstName || faker.name.firstName(gender);\n    lastName = lastName || faker.name.lastName(gender);\n\n    switch (r) {\n      case 0:\n        prefix = faker.name.prefix(gender);\n\n        if (prefix) {\n          return prefix + \" \" + firstName + \" \" + lastName;\n        }\n\n      case 1:\n        suffix = faker.name.suffix(gender);\n\n        if (suffix) {\n          return firstName + \" \" + lastName + \" \" + suffix;\n        }\n\n    }\n\n    return firstName + \" \" + lastName;\n  };\n  /**\n   * jobTitle\n   *\n   * @method jobTitle\n   * @memberof faker.name\n   */\n\n\n  this.jobTitle = function () {\n    return faker.name.jobDescriptor() + \" \" + faker.name.jobArea() + \" \" + faker.name.jobType();\n  };\n  /**\n   * prefix\n   *\n   * @method prefix\n   * @param {mixed} gender\n   * @memberof faker.name\n   */\n\n\n  this.prefix = function (gender) {\n    if (typeof faker.definitions.name.male_prefix !== \"undefined\" && typeof faker.definitions.name.female_prefix !== \"undefined\") {\n      if (typeof gender !== 'number') {\n        gender = faker.random.number(1);\n      }\n\n      if (gender === 0) {\n        return faker.random.arrayElement(faker.locales[faker.locale].name.male_prefix);\n      } else {\n        return faker.random.arrayElement(faker.locales[faker.locale].name.female_prefix);\n      }\n    }\n\n    return faker.random.arrayElement(faker.definitions.name.prefix);\n  };\n  /**\n   * suffix\n   *\n   * @method suffix\n   * @memberof faker.name\n   */\n\n\n  this.suffix = function () {\n    return faker.random.arrayElement(faker.definitions.name.suffix);\n  };\n  /**\n   * title\n   *\n   * @method title\n   * @memberof faker.name\n   */\n\n\n  this.title = function () {\n    var descriptor = faker.random.arrayElement(faker.definitions.name.title.descriptor),\n        level = faker.random.arrayElement(faker.definitions.name.title.level),\n        job = faker.random.arrayElement(faker.definitions.name.title.job);\n    return descriptor + \" \" + level + \" \" + job;\n  };\n  /**\n   * jobDescriptor\n   *\n   * @method jobDescriptor\n   * @memberof faker.name\n   */\n\n\n  this.jobDescriptor = function () {\n    return faker.random.arrayElement(faker.definitions.name.title.descriptor);\n  };\n  /**\n   * jobArea\n   *\n   * @method jobArea\n   * @memberof faker.name\n   */\n\n\n  this.jobArea = function () {\n    return faker.random.arrayElement(faker.definitions.name.title.level);\n  };\n  /**\n   * jobType\n   *\n   * @method jobType\n   * @memberof faker.name\n   */\n\n\n  this.jobType = function () {\n    return faker.random.arrayElement(faker.definitions.name.title.job);\n  };\n}\n\nmodule['exports'] = Name;","map":{"version":3,"sources":["C:/Users/david/react/RateCourses/client/node_modules/faker/lib/name.js"],"names":["Name","faker","firstName","gender","definitions","name","male_first_name","female_first_name","random","number","arrayElement","locales","locale","first_name","lastName","male_last_name","female_last_name","last_name","findName","r","prefix","suffix","jobTitle","jobDescriptor","jobArea","jobType","male_prefix","female_prefix","title","descriptor","level","job","module"],"mappings":"AAAA;;;;AAIA,SAASA,IAAT,CAAeC,KAAf,EAAsB;AAEpB;;;;;;;AAOA,OAAKC,SAAL,GAAiB,UAAUC,MAAV,EAAkB;AACjC,QAAI,OAAOF,KAAK,CAACG,WAAN,CAAkBC,IAAlB,CAAuBC,eAA9B,KAAkD,WAAlD,IAAiE,OAAOL,KAAK,CAACG,WAAN,CAAkBC,IAAlB,CAAuBE,iBAA9B,KAAoD,WAAzH,EAAsI;AACpI;AACA;AACA,UAAI,OAAOJ,MAAP,KAAkB,QAAtB,EAAgC;AAC9BA,QAAAA,MAAM,GAAGF,KAAK,CAACO,MAAN,CAAaC,MAAb,CAAoB,CAApB,CAAT;AACD;;AACD,UAAIN,MAAM,KAAK,CAAf,EAAkB;AAChB,eAAOF,KAAK,CAACO,MAAN,CAAaE,YAAb,CAA0BT,KAAK,CAACU,OAAN,CAAcV,KAAK,CAACW,MAApB,EAA4BP,IAA5B,CAAiCC,eAA3D,CAAP;AACD,OAFD,MAEO;AACL,eAAOL,KAAK,CAACO,MAAN,CAAaE,YAAb,CAA0BT,KAAK,CAACU,OAAN,CAAcV,KAAK,CAACW,MAApB,EAA4BP,IAA5B,CAAiCE,iBAA3D,CAAP;AACD;AACF;;AACD,WAAON,KAAK,CAACO,MAAN,CAAaE,YAAb,CAA0BT,KAAK,CAACG,WAAN,CAAkBC,IAAlB,CAAuBQ,UAAjD,CAAP;AACD,GAdD;AAgBA;;;;;;;;;AAOA,OAAKC,QAAL,GAAgB,UAAUX,MAAV,EAAkB;AAChC,QAAI,OAAOF,KAAK,CAACG,WAAN,CAAkBC,IAAlB,CAAuBU,cAA9B,KAAiD,WAAjD,IAAgE,OAAOd,KAAK,CAACG,WAAN,CAAkBC,IAAlB,CAAuBW,gBAA9B,KAAmD,WAAvH,EAAoI;AAClI;AACA;AACA,UAAI,OAAOb,MAAP,KAAkB,QAAtB,EAAgC;AAC9BA,QAAAA,MAAM,GAAGF,KAAK,CAACO,MAAN,CAAaC,MAAb,CAAoB,CAApB,CAAT;AACD;;AACD,UAAIN,MAAM,KAAK,CAAf,EAAkB;AAChB,eAAOF,KAAK,CAACO,MAAN,CAAaE,YAAb,CAA0BT,KAAK,CAACU,OAAN,CAAcV,KAAK,CAACW,MAApB,EAA4BP,IAA5B,CAAiCU,cAA3D,CAAP;AACD,OAFD,MAEO;AACL,eAAOd,KAAK,CAACO,MAAN,CAAaE,YAAb,CAA0BT,KAAK,CAACU,OAAN,CAAcV,KAAK,CAACW,MAApB,EAA4BP,IAA5B,CAAiCW,gBAA3D,CAAP;AACD;AACF;;AACD,WAAOf,KAAK,CAACO,MAAN,CAAaE,YAAb,CAA0BT,KAAK,CAACG,WAAN,CAAkBC,IAAlB,CAAuBY,SAAjD,CAAP;AACD,GAdD;AAgBA;;;;;;;;;;;AASA,OAAKC,QAAL,GAAgB,UAAUhB,SAAV,EAAqBY,QAArB,EAA+BX,MAA/B,EAAuC;AACnD,QAAIgB,CAAC,GAAGlB,KAAK,CAACO,MAAN,CAAaC,MAAb,CAAoB,CAApB,CAAR;AACA,QAAIW,MAAJ,EAAYC,MAAZ,CAFmD,CAGnD;AACA;;AACA,QAAI,OAAOlB,MAAP,KAAkB,QAAtB,EAAgC;AAC9BA,MAAAA,MAAM,GAAGF,KAAK,CAACO,MAAN,CAAaC,MAAb,CAAoB,CAApB,CAAT;AACD;;AACDP,IAAAA,SAAS,GAAGA,SAAS,IAAID,KAAK,CAACI,IAAN,CAAWH,SAAX,CAAqBC,MAArB,CAAzB;AACAW,IAAAA,QAAQ,GAAGA,QAAQ,IAAIb,KAAK,CAACI,IAAN,CAAWS,QAAX,CAAoBX,MAApB,CAAvB;;AACA,YAAQgB,CAAR;AACA,WAAK,CAAL;AACIC,QAAAA,MAAM,GAAGnB,KAAK,CAACI,IAAN,CAAWe,MAAX,CAAkBjB,MAAlB,CAAT;;AACA,YAAIiB,MAAJ,EAAY;AACR,iBAAOA,MAAM,GAAG,GAAT,GAAelB,SAAf,GAA2B,GAA3B,GAAiCY,QAAxC;AACH;;AACL,WAAK,CAAL;AACIO,QAAAA,MAAM,GAAGpB,KAAK,CAACI,IAAN,CAAWgB,MAAX,CAAkBlB,MAAlB,CAAT;;AACA,YAAIkB,MAAJ,EAAY;AACR,iBAAOnB,SAAS,GAAG,GAAZ,GAAkBY,QAAlB,GAA6B,GAA7B,GAAmCO,MAA1C;AACH;;AAVL;;AAaA,WAAOnB,SAAS,GAAG,GAAZ,GAAkBY,QAAzB;AACH,GAxBD;AA0BA;;;;;;;;AAMA,OAAKQ,QAAL,GAAgB,YAAY;AAC1B,WAAQrB,KAAK,CAACI,IAAN,CAAWkB,aAAX,KAA6B,GAA7B,GACNtB,KAAK,CAACI,IAAN,CAAWmB,OAAX,EADM,GACiB,GADjB,GAENvB,KAAK,CAACI,IAAN,CAAWoB,OAAX,EAFF;AAGD,GAJD;AAMA;;;;;;;;;AAOA,OAAKL,MAAL,GAAc,UAAUjB,MAAV,EAAkB;AAC9B,QAAI,OAAOF,KAAK,CAACG,WAAN,CAAkBC,IAAlB,CAAuBqB,WAA9B,KAA8C,WAA9C,IAA6D,OAAOzB,KAAK,CAACG,WAAN,CAAkBC,IAAlB,CAAuBsB,aAA9B,KAAgD,WAAjH,EAA8H;AAC5H,UAAI,OAAOxB,MAAP,KAAkB,QAAtB,EAAgC;AAC9BA,QAAAA,MAAM,GAAGF,KAAK,CAACO,MAAN,CAAaC,MAAb,CAAoB,CAApB,CAAT;AACD;;AACD,UAAIN,MAAM,KAAK,CAAf,EAAkB;AAChB,eAAOF,KAAK,CAACO,MAAN,CAAaE,YAAb,CAA0BT,KAAK,CAACU,OAAN,CAAcV,KAAK,CAACW,MAApB,EAA4BP,IAA5B,CAAiCqB,WAA3D,CAAP;AACD,OAFD,MAEO;AACL,eAAOzB,KAAK,CAACO,MAAN,CAAaE,YAAb,CAA0BT,KAAK,CAACU,OAAN,CAAcV,KAAK,CAACW,MAApB,EAA4BP,IAA5B,CAAiCsB,aAA3D,CAAP;AACD;AACF;;AACD,WAAO1B,KAAK,CAACO,MAAN,CAAaE,YAAb,CAA0BT,KAAK,CAACG,WAAN,CAAkBC,IAAlB,CAAuBe,MAAjD,CAAP;AACD,GAZD;AAcA;;;;;;;;AAMA,OAAKC,MAAL,GAAc,YAAY;AACtB,WAAOpB,KAAK,CAACO,MAAN,CAAaE,YAAb,CAA0BT,KAAK,CAACG,WAAN,CAAkBC,IAAlB,CAAuBgB,MAAjD,CAAP;AACH,GAFD;AAIA;;;;;;;;AAMA,OAAKO,KAAL,GAAa,YAAW;AACpB,QAAIC,UAAU,GAAI5B,KAAK,CAACO,MAAN,CAAaE,YAAb,CAA0BT,KAAK,CAACG,WAAN,CAAkBC,IAAlB,CAAuBuB,KAAvB,CAA6BC,UAAvD,CAAlB;AAAA,QACIC,KAAK,GAAS7B,KAAK,CAACO,MAAN,CAAaE,YAAb,CAA0BT,KAAK,CAACG,WAAN,CAAkBC,IAAlB,CAAuBuB,KAAvB,CAA6BE,KAAvD,CADlB;AAAA,QAEIC,GAAG,GAAW9B,KAAK,CAACO,MAAN,CAAaE,YAAb,CAA0BT,KAAK,CAACG,WAAN,CAAkBC,IAAlB,CAAuBuB,KAAvB,CAA6BG,GAAvD,CAFlB;AAIA,WAAOF,UAAU,GAAG,GAAb,GAAmBC,KAAnB,GAA2B,GAA3B,GAAiCC,GAAxC;AACH,GAND;AAQA;;;;;;;;AAMA,OAAKR,aAAL,GAAqB,YAAY;AAC/B,WAAOtB,KAAK,CAACO,MAAN,CAAaE,YAAb,CAA0BT,KAAK,CAACG,WAAN,CAAkBC,IAAlB,CAAuBuB,KAAvB,CAA6BC,UAAvD,CAAP;AACD,GAFD;AAIA;;;;;;;;AAMA,OAAKL,OAAL,GAAe,YAAY;AACzB,WAAOvB,KAAK,CAACO,MAAN,CAAaE,YAAb,CAA0BT,KAAK,CAACG,WAAN,CAAkBC,IAAlB,CAAuBuB,KAAvB,CAA6BE,KAAvD,CAAP;AACD,GAFD;AAIA;;;;;;;;AAMA,OAAKL,OAAL,GAAe,YAAY;AACzB,WAAOxB,KAAK,CAACO,MAAN,CAAaE,YAAb,CAA0BT,KAAK,CAACG,WAAN,CAAkBC,IAAlB,CAAuBuB,KAAvB,CAA6BG,GAAvD,CAAP;AACD,GAFD;AAID;;AAEDC,MAAM,CAAC,SAAD,CAAN,GAAoBhC,IAApB","sourcesContent":["/**\n *\n * @namespace faker.name\n */\nfunction Name (faker) {\n\n  /**\n   * firstName\n   *\n   * @method firstName\n   * @param {mixed} gender\n   * @memberof faker.name\n   */\n  this.firstName = function (gender) {\n    if (typeof faker.definitions.name.male_first_name !== \"undefined\" && typeof faker.definitions.name.female_first_name !== \"undefined\") {\n      // some locale datasets ( like ru ) have first_name split by gender. since the name.first_name field does not exist in these datasets,\n      // we must randomly pick a name from either gender array so faker.name.firstName will return the correct locale data ( and not fallback )\n      if (typeof gender !== 'number') {\n        gender = faker.random.number(1);\n      }\n      if (gender === 0) {\n        return faker.random.arrayElement(faker.locales[faker.locale].name.male_first_name)\n      } else {\n        return faker.random.arrayElement(faker.locales[faker.locale].name.female_first_name);\n      }\n    }\n    return faker.random.arrayElement(faker.definitions.name.first_name);\n  };\n\n  /**\n   * lastName\n   *\n   * @method lastName\n   * @param {mixed} gender\n   * @memberof faker.name\n   */\n  this.lastName = function (gender) {\n    if (typeof faker.definitions.name.male_last_name !== \"undefined\" && typeof faker.definitions.name.female_last_name !== \"undefined\") {\n      // some locale datasets ( like ru ) have last_name split by gender. i have no idea how last names can have genders, but also i do not speak russian\n      // see above comment of firstName method\n      if (typeof gender !== 'number') {\n        gender = faker.random.number(1);\n      }\n      if (gender === 0) {\n        return faker.random.arrayElement(faker.locales[faker.locale].name.male_last_name);\n      } else {\n        return faker.random.arrayElement(faker.locales[faker.locale].name.female_last_name);\n      }\n    }\n    return faker.random.arrayElement(faker.definitions.name.last_name);\n  };\n\n  /**\n   * findName\n   *\n   * @method findName\n   * @param {string} firstName\n   * @param {string} lastName\n   * @param {mixed} gender\n   * @memberof faker.name\n   */\n  this.findName = function (firstName, lastName, gender) {\n      var r = faker.random.number(8);\n      var prefix, suffix;\n      // in particular locales first and last names split by gender,\n      // thus we keep consistency by passing 0 as male and 1 as female\n      if (typeof gender !== 'number') {\n        gender = faker.random.number(1);\n      }\n      firstName = firstName || faker.name.firstName(gender);\n      lastName = lastName || faker.name.lastName(gender);\n      switch (r) {\n      case 0:\n          prefix = faker.name.prefix(gender);\n          if (prefix) {\n              return prefix + \" \" + firstName + \" \" + lastName;\n          }\n      case 1:\n          suffix = faker.name.suffix(gender);\n          if (suffix) {\n              return firstName + \" \" + lastName + \" \" + suffix;\n          }\n      }\n\n      return firstName + \" \" + lastName;\n  };\n\n  /**\n   * jobTitle\n   *\n   * @method jobTitle\n   * @memberof faker.name\n   */\n  this.jobTitle = function () {\n    return  faker.name.jobDescriptor() + \" \" +\n      faker.name.jobArea() + \" \" +\n      faker.name.jobType();\n  };\n  \n  /**\n   * prefix\n   *\n   * @method prefix\n   * @param {mixed} gender\n   * @memberof faker.name\n   */\n  this.prefix = function (gender) {\n    if (typeof faker.definitions.name.male_prefix !== \"undefined\" && typeof faker.definitions.name.female_prefix !== \"undefined\") {\n      if (typeof gender !== 'number') {\n        gender = faker.random.number(1);\n      }\n      if (gender === 0) {\n        return faker.random.arrayElement(faker.locales[faker.locale].name.male_prefix);\n      } else {\n        return faker.random.arrayElement(faker.locales[faker.locale].name.female_prefix);\n      }\n    }\n    return faker.random.arrayElement(faker.definitions.name.prefix);\n  };\n\n  /**\n   * suffix\n   *\n   * @method suffix\n   * @memberof faker.name\n   */\n  this.suffix = function () {\n      return faker.random.arrayElement(faker.definitions.name.suffix);\n  };\n\n  /**\n   * title\n   *\n   * @method title\n   * @memberof faker.name\n   */\n  this.title = function() {\n      var descriptor  = faker.random.arrayElement(faker.definitions.name.title.descriptor),\n          level       = faker.random.arrayElement(faker.definitions.name.title.level),\n          job         = faker.random.arrayElement(faker.definitions.name.title.job);\n\n      return descriptor + \" \" + level + \" \" + job;\n  };\n\n  /**\n   * jobDescriptor\n   *\n   * @method jobDescriptor\n   * @memberof faker.name\n   */\n  this.jobDescriptor = function () {\n    return faker.random.arrayElement(faker.definitions.name.title.descriptor);\n  };\n\n  /**\n   * jobArea\n   *\n   * @method jobArea\n   * @memberof faker.name\n   */\n  this.jobArea = function () {\n    return faker.random.arrayElement(faker.definitions.name.title.level);\n  };\n\n  /**\n   * jobType\n   *\n   * @method jobType\n   * @memberof faker.name\n   */\n  this.jobType = function () {\n    return faker.random.arrayElement(faker.definitions.name.title.job);\n  };\n\n}\n\nmodule['exports'] = Name;\n"]},"metadata":{},"sourceType":"script"}