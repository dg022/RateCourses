{"ast":null,"code":"'use strict';\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport PropTypes from 'prop-types';\nimport { getImageSize } from '../utils';\n\nvar GithubSource = function GithubSource(props) {\n  var _this = this;\n\n  _classCallCheck(this, GithubSource);\n\n  _defineProperty(this, \"props\", null);\n\n  _defineProperty(this, \"isCompatible\", function () {\n    return !!_this.props.githubHandle;\n  });\n\n  _defineProperty(this, \"get\", function (setState) {\n    var githubHandle = _this.props.githubHandle;\n    var size = getImageSize(_this.props.size);\n    var url = \"https://avatars.githubusercontent.com/\".concat(githubHandle, \"?v=4\");\n    if (size) url += \"&s=\".concat(size);\n    setState({\n      sourceName: 'github',\n      src: url\n    });\n  });\n\n  this.props = props;\n};\n\n_defineProperty(GithubSource, \"propTypes\", {\n  githubHandle: PropTypes.string\n});\n\nexport { GithubSource as default };","map":{"version":3,"sources":["C:/Users/david/react/RateCourses/client/node_modules/react-avatar/es/sources/Github.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","PropTypes","getImageSize","GithubSource","props","_this","githubHandle","setState","size","url","concat","sourceName","src","string","default"],"mappings":"AAAA;;AAEA,SAASA,eAAT,CAAyBC,QAAzB,EAAmCC,WAAnC,EAAgD;AAAE,MAAI,EAAED,QAAQ,YAAYC,WAAtB,CAAJ,EAAwC;AAAE,UAAM,IAAIC,SAAJ,CAAc,mCAAd,CAAN;AAA2D;AAAE;;AAEzJ,SAASC,eAAT,CAAyBC,GAAzB,EAA8BC,GAA9B,EAAmCC,KAAnC,EAA0C;AAAE,MAAID,GAAG,IAAID,GAAX,EAAgB;AAAEG,IAAAA,MAAM,CAACC,cAAP,CAAsBJ,GAAtB,EAA2BC,GAA3B,EAAgC;AAAEC,MAAAA,KAAK,EAAEA,KAAT;AAAgBG,MAAAA,UAAU,EAAE,IAA5B;AAAkCC,MAAAA,YAAY,EAAE,IAAhD;AAAsDC,MAAAA,QAAQ,EAAE;AAAhE,KAAhC;AAA0G,GAA5H,MAAkI;AAAEP,IAAAA,GAAG,CAACC,GAAD,CAAH,GAAWC,KAAX;AAAmB;;AAAC,SAAOF,GAAP;AAAa;;AAEjN,OAAOQ,SAAP,MAAsB,YAAtB;AACA,SAASC,YAAT,QAA6B,UAA7B;;AAEA,IAAIC,YAAY,GAAG,SAASA,YAAT,CAAsBC,KAAtB,EAA6B;AAC9C,MAAIC,KAAK,GAAG,IAAZ;;AAEAjB,EAAAA,eAAe,CAAC,IAAD,EAAOe,YAAP,CAAf;;AAEAX,EAAAA,eAAe,CAAC,IAAD,EAAO,OAAP,EAAgB,IAAhB,CAAf;;AAEAA,EAAAA,eAAe,CAAC,IAAD,EAAO,cAAP,EAAuB,YAAY;AAChD,WAAO,CAAC,CAACa,KAAK,CAACD,KAAN,CAAYE,YAArB;AACD,GAFc,CAAf;;AAIAd,EAAAA,eAAe,CAAC,IAAD,EAAO,KAAP,EAAc,UAAUe,QAAV,EAAoB;AAC/C,QAAID,YAAY,GAAGD,KAAK,CAACD,KAAN,CAAYE,YAA/B;AACA,QAAIE,IAAI,GAAGN,YAAY,CAACG,KAAK,CAACD,KAAN,CAAYI,IAAb,CAAvB;AACA,QAAIC,GAAG,GAAG,yCAAyCC,MAAzC,CAAgDJ,YAAhD,EAA8D,MAA9D,CAAV;AACA,QAAIE,IAAJ,EAAUC,GAAG,IAAI,MAAMC,MAAN,CAAaF,IAAb,CAAP;AACVD,IAAAA,QAAQ,CAAC;AACPI,MAAAA,UAAU,EAAE,QADL;AAEPC,MAAAA,GAAG,EAAEH;AAFE,KAAD,CAAR;AAID,GATc,CAAf;;AAWA,OAAKL,KAAL,GAAaA,KAAb;AACD,CAvBD;;AAyBAZ,eAAe,CAACW,YAAD,EAAe,WAAf,EAA4B;AACzCG,EAAAA,YAAY,EAAEL,SAAS,CAACY;AADiB,CAA5B,CAAf;;AAIA,SAASV,YAAY,IAAIW,OAAzB","sourcesContent":["'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport PropTypes from 'prop-types';\nimport { getImageSize } from '../utils';\n\nvar GithubSource = function GithubSource(props) {\n  var _this = this;\n\n  _classCallCheck(this, GithubSource);\n\n  _defineProperty(this, \"props\", null);\n\n  _defineProperty(this, \"isCompatible\", function () {\n    return !!_this.props.githubHandle;\n  });\n\n  _defineProperty(this, \"get\", function (setState) {\n    var githubHandle = _this.props.githubHandle;\n    var size = getImageSize(_this.props.size);\n    var url = \"https://avatars.githubusercontent.com/\".concat(githubHandle, \"?v=4\");\n    if (size) url += \"&s=\".concat(size);\n    setState({\n      sourceName: 'github',\n      src: url\n    });\n  });\n\n  this.props = props;\n};\n\n_defineProperty(GithubSource, \"propTypes\", {\n  githubHandle: PropTypes.string\n});\n\nexport { GithubSource as default };"]},"metadata":{},"sourceType":"module"}