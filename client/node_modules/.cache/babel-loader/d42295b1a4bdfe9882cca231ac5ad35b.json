{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\david\\\\react\\\\RateCourses\\\\client\\\\src\\\\Components\\\\Scale.js\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Slider from \"@material-ui/core/Slider\";\n\nconst DiscreteSlider = () => {\n  const useStyles = makeStyles(theme => ({\n    root: {\n      width: 300\n    },\n    margin: {\n      height: theme.spacing(2)\n    }\n  }));\n  const marks = [{\n    value: 1,\n    label: \"Hard\"\n  }, {\n    value: 2,\n    label: \"\"\n  }, {\n    value: 3,\n    label: \"Average\"\n  }, {\n    value: 4,\n    label: \"\"\n  }, {\n    value: 5,\n    label: \"Total Bird\"\n  }];\n\n  function valuetext(value) {\n    return `${value}`;\n  }\n\n  const classes = useStyles();\n\n  const handleSliderChange = (event, newValue) => {\n    // Here, what we want to do, call a deeply nested call back function, which then notifies all the components of the new time\n    this.props.Difficulty(newValue);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Slider, {\n    defaultValue: 1,\n    getAriaValueText: valuetext,\n    \"aria-labelledby\": \"discrete-slider-custom\",\n    step: 0.5,\n    max: 5,\n    min: 1,\n    onChange: handleSliderChange,\n    valueLabelDisplay: \"auto\",\n    marks: marks,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default DiscreteSlider;","map":{"version":3,"sources":["C:/Users/david/react/RateCourses/client/src/Components/Scale.js"],"names":["React","makeStyles","Typography","Slider","DiscreteSlider","useStyles","theme","root","width","margin","height","spacing","marks","value","label","valuetext","classes","handleSliderChange","event","newValue","props","Difficulty"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;AAKA,MAAMC,cAAc,GAAG,MAAM;AACzB,QAAMC,SAAS,GAAGJ,UAAU,CAACK,KAAK,KAAK;AACnCC,IAAAA,IAAI,EAAE;AACJC,MAAAA,KAAK,EAAE;AADH,KAD6B;AAInCC,IAAAA,MAAM,EAAE;AACNC,MAAAA,MAAM,EAAEJ,KAAK,CAACK,OAAN,CAAc,CAAd;AADF;AAJ2B,GAAL,CAAN,CAA5B;AAYE,QAAMC,KAAK,GAAG,CACZ;AACEC,IAAAA,KAAK,EAAE,CADT;AAEEC,IAAAA,KAAK,EAAE;AAFT,GADY,EAKZ;AACED,IAAAA,KAAK,EAAE,CADT;AAEEC,IAAAA,KAAK,EAAE;AAFT,GALY,EASZ;AACED,IAAAA,KAAK,EAAE,CADT;AAEEC,IAAAA,KAAK,EAAE;AAFT,GATY,EAaZ;AACED,IAAAA,KAAK,EAAE,CADT;AAEEC,IAAAA,KAAK,EAAE;AAFT,GAbY,EAiBZ;AACED,IAAAA,KAAK,EAAE,CADT;AAEEC,IAAAA,KAAK,EAAE;AAFT,GAjBY,CAAd;;AA0BF,WAASC,SAAT,CAAmBF,KAAnB,EAA0B;AACtB,WAAQ,GAAEA,KAAM,EAAhB;AACD;;AAEH,QAAMG,OAAO,GAAGX,SAAS,EAAzB;;AACA,QAAMY,kBAAkB,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAoB;AAC/C;AACA,SAAKC,KAAL,CAAWC,UAAX,CAAsBF,QAAtB;AACD,GAHC;;AAKF,sBACE;AAAK,IAAA,SAAS,EAAEH,OAAO,CAACT,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,YAAY,EAAE,CADhB;AAEE,IAAA,gBAAgB,EAAEQ,SAFpB;AAGE,uBAAgB,wBAHlB;AAIE,IAAA,IAAI,EAAE,GAJR;AAKE,IAAA,GAAG,EAAE,CALP;AAME,IAAA,GAAG,EAAE,CANP;AAOE,IAAA,QAAQ,EAAEE,kBAPZ;AAQE,IAAA,iBAAiB,EAAC,MARpB;AASE,IAAA,KAAK,EAAEL,KATT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAeD,CAhED;;AAmEA,eAAeR,cAAf","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\n\r\n\r\n\r\n\r\nconst DiscreteSlider = () => {\r\n    const useStyles = makeStyles(theme => ({\r\n        root: {\r\n          width: 300\r\n        },\r\n        margin: {\r\n          height: theme.spacing(2)\r\n        }\r\n      }));\r\n      \r\n      \r\n      \r\n      \r\n      const marks = [\r\n        {\r\n          value: 1,\r\n          label: \"Hard\"\r\n        },\r\n        {\r\n          value: 2,\r\n          label: \"\"\r\n        },\r\n        {\r\n          value: 3,\r\n          label: \"Average\"\r\n        },\r\n        {\r\n          value: 4,\r\n          label: \"\"\r\n        },\r\n        {\r\n          value: 5,\r\n          label: \"Total Bird\"\r\n        }\r\n      ];\r\n      \r\n\r\n\r\n\r\n    function valuetext(value) {\r\n        return `${value}`;\r\n      }\r\n    \r\n    const classes = useStyles();\r\n    const handleSliderChange = (event, newValue)=> {\r\n    // Here, what we want to do, call a deeply nested call back function, which then notifies all the components of the new time\r\n    this.props.Difficulty(newValue); \r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Slider\r\n        defaultValue={1}\r\n        getAriaValueText={valuetext}\r\n        aria-labelledby=\"discrete-slider-custom\"\r\n        step={0.5}\r\n        max={5}\r\n        min={1}\r\n        onChange={handleSliderChange}\r\n        valueLabelDisplay=\"auto\"\r\n        marks={marks}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default DiscreteSlider;"]},"metadata":{},"sourceType":"module"}