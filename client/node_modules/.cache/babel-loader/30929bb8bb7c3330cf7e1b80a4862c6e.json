{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\david\\\\react\\\\RateCourses\\\\client\\\\src\\\\Components\\\\Scale.js\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Slider from \"@material-ui/core/Slider\";\n\nclass DiscreteSlider extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      diff: 1\n    };\n    this.useStyles = makeStyles(theme => ({\n      root: {\n        width: 300\n      },\n      margin: {\n        height: theme.spacing(2)\n      }\n    }));\n    this.marks = [{\n      value: 1,\n      label: \"Hard\"\n    }, {\n      value: 2,\n      label: \"\"\n    }, {\n      value: 3,\n      label: \"Average\"\n    }, {\n      value: 4,\n      label: \"\"\n    }, {\n      value: 5,\n      label: \"Total Bird\"\n    }];\n\n    this.valuetext = value => {\n      return `${value}`;\n    };\n\n    this.classes = this.useStyles();\n\n    this.handleSliderChange = (event, newValue) => {\n      // Here, what we want to do, call a deeply nested call back function, which then notifies all the components of the new time\n      this.props.Difficulty(newValue);\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.dval != null && nextProps.dval != this.state.diff) {\n      this.setState({\n        diff: nextProps.dval\n      });\n    }\n  }\n\n  toNumberString(num) {\n    console.log(num);\n\n    if (Number.isInteger(num)) {\n      return num + \".0\";\n    } else {\n      return num.toString();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: this.classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Slider, {\n      defaultValue: this.state.diff,\n      getAriaValueText: this.valuetext,\n      \"aria-labelledby\": \"discrete-slider-custom\",\n      step: 0.5,\n      max: 5,\n      min: 1,\n      onChange: handleSliderChange,\n      valueLabelDisplay: \"auto\",\n      marks: marks,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\n\nexport default DiscreteSlider;","map":{"version":3,"sources":["C:/Users/david/react/RateCourses/client/src/Components/Scale.js"],"names":["React","makeStyles","Typography","Slider","DiscreteSlider","Component","state","diff","useStyles","theme","root","width","margin","height","spacing","marks","value","label","valuetext","classes","handleSliderChange","event","newValue","props","Difficulty","componentWillReceiveProps","nextProps","dval","setState","toNumberString","num","console","log","Number","isInteger","toString","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;AAKA,MAAOC,cAAP,SAA8BJ,KAAK,CAACK,SAApC,CAA8C;AAAA;AAAA;AAAA,SAI5CC,KAJ4C,GAIpC;AAENC,MAAAA,IAAI,EAAC;AAFC,KAJoC;AAAA,SAqB3CC,SArB2C,GAqB/BP,UAAU,CAACQ,KAAK,KAAK;AAC5BC,MAAAA,IAAI,EAAE;AACJC,QAAAA,KAAK,EAAE;AADH,OADsB;AAI5BC,MAAAA,MAAM,EAAE;AACNC,QAAAA,MAAM,EAAEJ,KAAK,CAACK,OAAN,CAAc,CAAd;AADF;AAJoB,KAAL,CAAN,CArBqB;AAAA,SA4CvCC,KA5CuC,GA4C/B,CACP;AACEC,MAAAA,KAAK,EAAE,CADT;AAEEC,MAAAA,KAAK,EAAE;AAFT,KADO,EAKP;AACED,MAAAA,KAAK,EAAE,CADT;AAEEC,MAAAA,KAAK,EAAE;AAFT,KALO,EASP;AACED,MAAAA,KAAK,EAAE,CADT;AAEEC,MAAAA,KAAK,EAAE;AAFT,KATO,EAaP;AACED,MAAAA,KAAK,EAAE,CADT;AAEEC,MAAAA,KAAK,EAAE;AAFT,KAbO,EAiBP;AACED,MAAAA,KAAK,EAAE,CADT;AAEEC,MAAAA,KAAK,EAAE;AAFT,KAjBO,CA5C+B;;AAAA,SAsE1CC,SAtE0C,GAsE7BF,KAAD,IAAU;AAClB,aAAQ,GAAEA,KAAM,EAAhB;AACD,KAxEuC;;AAAA,SA0EzCG,OA1EyC,GA0E/B,KAAKX,SAAL,EA1E+B;;AAAA,SA6EzCY,kBA7EyC,GA6EpB,CAACC,KAAD,EAAQC,QAAR,KAAoB;AAC1C;AACA,WAAKC,KAAL,CAAWC,UAAX,CAAsBF,QAAtB;AACD,KAhF2C;AAAA;;AAW5CG,EAAAA,yBAAyB,CAACC,SAAD,EAAW;AAElC,QAAGA,SAAS,CAACC,IAAV,IAAgB,IAAhB,IAAwBD,SAAS,CAACC,IAAV,IAAgB,KAAKrB,KAAL,CAAWC,IAAtD,EAA2D;AAEzD,WAAKqB,QAAL,CAAc;AAACrB,QAAAA,IAAI,EAACmB,SAAS,CAACC;AAAhB,OAAd;AAED;AAEF;;AAYGE,EAAAA,cAAc,CAACC,GAAD,EAAM;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;;AACA,QAAIG,MAAM,CAACC,SAAP,CAAiBJ,GAAjB,CAAJ,EAA2B;AACzB,aAAOA,GAAG,GAAG,IAAb;AACD,KAFD,MAEO;AACL,aAAOA,GAAG,CAACK,QAAJ,EAAP;AACD;AACF;;AA4CLC,EAAAA,MAAM,GAAE;AACR,wBACE;AAAK,MAAA,SAAS,EAAE,KAAKjB,OAAL,CAAaT,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AACE,MAAA,YAAY,EAAE,KAAKJ,KAAL,CAAWC,IAD3B;AAEE,MAAA,gBAAgB,EAAE,KAAKW,SAFzB;AAGE,yBAAgB,wBAHlB;AAIE,MAAA,IAAI,EAAE,GAJR;AAKE,MAAA,GAAG,EAAE,CALP;AAME,MAAA,GAAG,EAAE,CANP;AAOE,MAAA,QAAQ,EAAEE,kBAPZ;AAQE,MAAA,iBAAiB,EAAC,MARpB;AASE,MAAA,KAAK,EAAEL,KATT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAeC;;AAlG2C;;AAsG9C,eAAeX,cAAf","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\n\r\n\r\n\r\n\r\nclass  DiscreteSlider extends React.Component {\r\n\r\n\r\n\r\n  state = {\r\n\r\n    diff:1, \r\n\r\n\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps){\r\n\r\n    if(nextProps.dval!=null && nextProps.dval!=this.state.diff){\r\n\r\n      this.setState({diff:nextProps.dval})\r\n\r\n    }\r\n\r\n  }\r\n\r\n   useStyles = makeStyles(theme => ({\r\n        root: {\r\n          width: 300\r\n        },\r\n        margin: {\r\n          height: theme.spacing(2)\r\n        }\r\n      }));\r\n\r\n\r\n      toNumberString(num) { \r\n        console.log(num)\r\n        if (Number.isInteger(num)) { \r\n          return num + \".0\"\r\n        } else {\r\n          return num.toString(); \r\n        }\r\n      }\r\n      \r\n      \r\n      \r\n      \r\n      \r\n       marks = [\r\n        {\r\n          value: 1,\r\n          label: \"Hard\"\r\n        },\r\n        {\r\n          value: 2,\r\n          label: \"\"\r\n        },\r\n        {\r\n          value: 3,\r\n          label: \"Average\"\r\n        },\r\n        {\r\n          value: 4,\r\n          label: \"\"\r\n        },\r\n        {\r\n          value: 5,\r\n          label: \"Total Bird\"\r\n        }\r\n      ];\r\n      \r\n\r\n\r\n\r\n    valuetext = (value)=> {\r\n        return `${value}`;\r\n      }\r\n    \r\n     classes = this.useStyles();\r\n\r\n\r\n     handleSliderChange = (event, newValue)=> {\r\n    // Here, what we want to do, call a deeply nested call back function, which then notifies all the components of the new time\r\n    this.props.Difficulty(newValue); \r\n  };\r\n\r\n  render(){\r\n  return (\r\n    <div className={this.classes.root}>\r\n      <Slider\r\n        defaultValue={this.state.diff}\r\n        getAriaValueText={this.valuetext}\r\n        aria-labelledby=\"discrete-slider-custom\"\r\n        step={0.5}\r\n        max={5}\r\n        min={1}\r\n        onChange={handleSliderChange}\r\n        valueLabelDisplay=\"auto\"\r\n        marks={marks}\r\n      />\r\n    </div>\r\n  );\r\n  }\r\n}\r\n\r\n\r\nexport default DiscreteSlider;"]},"metadata":{},"sourceType":"module"}