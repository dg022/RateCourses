{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\david\\\\react\\\\RateCourses\\\\client\\\\src\\\\Components\\\\Edit.js\";\nimport React, { Component } from 'react';\nimport { Button, Modal, TextArea, Form } from 'semantic-ui-react';\nimport Input from \"./Input\";\nimport \"./Edit.css\";\nimport axios from \"axios\";\n\nclass ModalExampleCloseConfig extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      open: false,\n      message: false,\n      code: \"\"\n    };\n\n    this.codeChange = codeType => {\n      this.setState({\n        code: codeType\n      });\n    };\n\n    this.closeConfigShow = (closeOnEscape, closeOnDimmerClick) => () => {\n      this.setState({\n        closeOnEscape,\n        closeOnDimmerClick,\n        open: true\n      });\n    };\n\n    this.close = () => this.setState({\n      open: false,\n      message: false\n    });\n\n    this.Submitclose = async () => {\n      this.setState({\n        message: true\n      });\n    };\n\n    this.renderButton = () => {\n      if (this.state.message) {\n        return /*#__PURE__*/React.createElement(Modal.Actions, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }\n        });\n      }\n\n      if (!this.state.message) {\n        return /*#__PURE__*/React.createElement(Modal.Actions, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          onClick: this.Submitclose,\n          positive: true,\n          labelPosition: \"right\",\n          icon: \"checkmark\",\n          content: \"Submit\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 9\n          }\n        }));\n      }\n    };\n\n    this.searchCourse = async () => {\n      let res = await axios.get('/searchCourse', {\n        params: {\n          Title: this.props.Title,\n          id: this.state.code\n        }\n      });\n\n      if (res.data != \"\") {\n        console.log(\"the code the user has provided us exists within the database\");\n        console.log(res);\n      } else {\n        console.log(\"it does not exist within the database\");\n      }\n    };\n\n    this.renderModal = () => {\n      if (this.state.message) {\n        this.searchCourse(); // here is where you have to do the reqeust\n        // You need the courses title \n\n        return /*#__PURE__*/React.createElement(Modal.Content, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }\n        }, \"Thank you for letting us know, we will take a look.\");\n      }\n\n      if (this.state.open) {\n        return /*#__PURE__*/React.createElement(Modal.Content, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(Form, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"center\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(Input, {\n          codeChange: this.codeChange,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 9\n          }\n        }))));\n      }\n    };\n  }\n\n  render() {\n    const {\n      open,\n      closeOnEscape,\n      closeOnDimmerClick\n    } = this.state;\n\n    if (this.props.on == true) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        onClick: this.closeConfigShow(false, true),\n        class: \"pencil alternate icon large\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Modal, {\n        className: \"edit\",\n        open: open,\n        closeOnEscape: closeOnEscape,\n        closeOnDimmerClick: closeOnDimmerClick,\n        onClose: this.close,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }\n      }, \"  \", /*#__PURE__*/React.createElement(\"center\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 37\n        }\n      }, \" Edit Post: Provide Edit Code! \"), \" \"), this.renderModal(), this.renderButton()));\n    }\n\n    return /*#__PURE__*/React.createElement(\"i\", {\n      class: \" large pen square  icon large \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n\nexport default ModalExampleCloseConfig;","map":{"version":3,"sources":["C:/Users/david/react/RateCourses/client/src/Components/Edit.js"],"names":["React","Component","Button","Modal","TextArea","Form","Input","axios","ModalExampleCloseConfig","state","open","message","code","codeChange","codeType","setState","closeConfigShow","closeOnEscape","closeOnDimmerClick","close","Submitclose","renderButton","searchCourse","res","get","params","Title","props","id","data","console","log","renderModal","render","on"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Button, Modal, TextArea, Form } from 'semantic-ui-react'\r\nimport Input from \"./Input\"\r\nimport \"./Edit.css\";\r\nimport axios from \"axios\"\r\n\r\nclass ModalExampleCloseConfig extends Component {\r\n  state = { \r\n      open: false,\r\n      message:false,\r\n      code:\"\"\r\n\r\n}\r\n\r\n\r\n  codeChange  = (codeType) =>{\r\n\r\n    this.setState({code:codeType})\r\n\r\n  } \r\n\r\n  closeConfigShow = (closeOnEscape, closeOnDimmerClick) => () => {\r\n    this.setState({ closeOnEscape, closeOnDimmerClick, open: true })\r\n  }\r\n\r\n  close = () => this.setState({ open: false, message:false})\r\n  Submitclose = async () => {\r\n  \r\n \r\n  this.setState({ message:true })\r\n\r\n  \r\n \r\n  }\r\n\r\n  renderButton=()=>{\r\n\r\n    if(this.state.message){\r\n\r\n        return(\r\n            <Modal.Actions>\r\n        </Modal.Actions>\r\n            );\r\n\r\n    }\r\n\r\n    if(!this.state.message){\r\n        return(\r\n        <Modal.Actions>\r\n                    \r\n        <Button\r\n        onClick={this.Submitclose}\r\n        positive\r\n        labelPosition='right'\r\n        icon='checkmark'\r\n        content='Submit'\r\n        />\r\n    </Modal.Actions>\r\n        );\r\n    }\r\n\r\n    \r\n\r\n\r\n  }\r\n\r\n\r\n  searchCourse = async () => {\r\n\r\n    \r\n    let res = await axios.get('/searchCourse', {\r\n        params: {\r\n          Title: this.props.Title,\r\n          id:this.state.code\r\n        }\r\n      });\r\n\r\n    if(res.data!=\"\"){\r\n        console.log(\"the code the user has provided us exists within the database\")\r\n        console.log(res); \r\n        \r\n    }else{\r\n\r\n\r\n        console.log(\"it does not exist within the database\")\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n  renderModal =  () =>{\r\n\r\n    if(this.state.message){\r\n\r\n\r\n        this.searchCourse()\r\n\r\n        // here is where you have to do the reqeust\r\n        // You need the courses title \r\n\r\n\r\n        return(\r\n\r\n\r\n            <Modal.Content>\r\n    \r\n                Thank you for letting us know, we will take a look. \r\n    \r\n            </Modal.Content>\r\n    \r\n    \r\n        );\r\n\r\n    }\r\n\r\n\r\n\r\n    if(this.state.open){\r\n    return(\r\n\r\n        <Modal.Content>\r\n\r\n        <Form>\r\n\r\n        <center>\r\n        <Input  codeChange={this.codeChange}/>\r\n        </center>\r\n       \r\n\r\n        </Form>\r\n\r\n        </Modal.Content>\r\n\r\n\r\n\r\n    );\r\n    }\r\n\r\n   \r\n\r\n  }\r\n\r\n  render() {\r\n    const { open, closeOnEscape, closeOnDimmerClick } = this.state\r\n\r\n    \r\n\r\n\r\n\r\n    if(this.props.on == true){\r\n\r\n    return (\r\n\r\n                <div>\r\n                    <i onClick={this.closeConfigShow(false, true)}   class=\"pencil alternate icon large\"></i>\r\n                \r\n                    <Modal className=\"edit\"\r\n                    open={open}\r\n                    closeOnEscape={closeOnEscape}\r\n                    closeOnDimmerClick={closeOnDimmerClick}\r\n                    onClose={this.close}\r\n                    >\r\n                    <Modal.Header>  <center> Edit Post: Provide Edit Code! </center> </Modal.Header>\r\n                   {this.renderModal()}\r\n                \r\n                   {this.renderButton()}\r\n\r\n                    </Modal>\r\n\r\n                </div>\r\n                )\r\n            }\r\n\r\n                return(\r\n\r\n\r\n                    \r\n      <i class=\" large pen square  icon large \"></i>\r\n                );\r\n  }\r\n}\r\n\r\nexport default ModalExampleCloseConfig\r\n"]},"metadata":{},"sourceType":"module"}