{"ast":null,"code":"var DESCRIPTORS = require('../internals/descriptors');\n\nvar defineProperty = require('../internals/object-define-property').f;\n\nvar FunctionPrototype = Function.prototype;\nvar FunctionPrototypeToString = FunctionPrototype.toString;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name'; // Function instances `.name` property\n// https://tc39.github.io/ecma262/#sec-function-instances-name\n\nif (DESCRIPTORS && !(NAME in FunctionPrototype)) {\n  defineProperty(FunctionPrototype, NAME, {\n    configurable: true,\n    get: function get() {\n      try {\n        return FunctionPrototypeToString.call(this).match(nameRE)[1];\n      } catch (error) {\n        return '';\n      }\n    }\n  });\n}","map":{"version":3,"sources":["C:/Users/david/react/RateCourses/client/node_modules/core-js/modules/es.function.name.js"],"names":["DESCRIPTORS","require","defineProperty","f","FunctionPrototype","Function","prototype","FunctionPrototypeToString","toString","nameRE","NAME","configurable","get","call","match","error"],"mappings":"AAAA,IAAIA,WAAW,GAAGC,OAAO,CAAC,0BAAD,CAAzB;;AACA,IAAIC,cAAc,GAAGD,OAAO,CAAC,qCAAD,CAAP,CAA+CE,CAApE;;AAEA,IAAIC,iBAAiB,GAAGC,QAAQ,CAACC,SAAjC;AACA,IAAIC,yBAAyB,GAAGH,iBAAiB,CAACI,QAAlD;AACA,IAAIC,MAAM,GAAG,uBAAb;AACA,IAAIC,IAAI,GAAG,MAAX,C,CAEA;AACA;;AACA,IAAIV,WAAW,IAAI,EAAEU,IAAI,IAAIN,iBAAV,CAAnB,EAAiD;AAC/CF,EAAAA,cAAc,CAACE,iBAAD,EAAoBM,IAApB,EAA0B;AACtCC,IAAAA,YAAY,EAAE,IADwB;AAEtCC,IAAAA,GAAG,EAAE,eAAY;AACf,UAAI;AACF,eAAOL,yBAAyB,CAACM,IAA1B,CAA+B,IAA/B,EAAqCC,KAArC,CAA2CL,MAA3C,EAAmD,CAAnD,CAAP;AACD,OAFD,CAEE,OAAOM,KAAP,EAAc;AACd,eAAO,EAAP;AACD;AACF;AARqC,GAA1B,CAAd;AAUD","sourcesContent":["var DESCRIPTORS = require('../internals/descriptors');\nvar defineProperty = require('../internals/object-define-property').f;\n\nvar FunctionPrototype = Function.prototype;\nvar FunctionPrototypeToString = FunctionPrototype.toString;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// Function instances `.name` property\n// https://tc39.github.io/ecma262/#sec-function-instances-name\nif (DESCRIPTORS && !(NAME in FunctionPrototype)) {\n  defineProperty(FunctionPrototype, NAME, {\n    configurable: true,\n    get: function () {\n      try {\n        return FunctionPrototypeToString.call(this).match(nameRE)[1];\n      } catch (error) {\n        return '';\n      }\n    }\n  });\n}\n"]},"metadata":{},"sourceType":"script"}